{"_id":"set-prototype-of","_rev":"3-43edb8344b5c866baa2693186e22078d","name":"set-prototype-of","description":"Object.setPrototypeOf Polyfill","dist-tags":{"latest":"1.0.0"},"versions":{"1.0.0":{"name":"set-prototype-of","version":"1.0.0","description":"Object.setPrototypeOf Polyfill","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git+https://github.com/tjmehta/set-prototype-of.git"},"keywords":["object","setprototypeof","set","prototype","of","polyfill","es6"],"author":{"name":"Tejesh Mehta"},"license":"MIT","bugs":{"url":"https://github.com/tjmehta/set-prototype-of/issues"},"homepage":"https://github.com/tjmehta/set-prototype-of#readme","gitHead":"505d8dfbe5f1dda9ac382c6a0467302b7aedb135","_id":"set-prototype-of@1.0.0","_shasum":"80221d6da0ec68511ddc743909757ad144fc1dfd","_from":".","_npmVersion":"2.14.7","_nodeVersion":"4.1.1","_npmUser":{"name":"tjmehta","email":"tj_mehta@hotmail.com"},"maintainers":[{"name":"tjmehta","email":"tj_mehta@hotmail.com"}],"dist":{"shasum":"80221d6da0ec68511ddc743909757ad144fc1dfd","tarball":"https://registry.npmjs.org/set-prototype-of/-/set-prototype-of-1.0.0.tgz","integrity":"sha512-OeTRSF+prexqa0ZOjfYR2pdGG/9nyzoXhsDj9M/0R8cgK1r9SkiQiqGdQQcObmnalKVPaTLrF8P71OacYqcYGw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIBReU2Q6NiEcc+46Bn2YEVsWGGMUMhD0N/QqMPGZ8ljUAiBBrsekzcsvGE57ujr9JxtoL0qgrrvOyDgsuKWtxuPM1g=="}]}}},"readme":"# Object.setPrototypeOf Polyfill (set-prototype-of)\n\n### Example\n```js\nrequire('set-prototype-of'); // Object.setPrototypeOf Polyfill\nObject.setPrototypeOf(obj, proto);\n```\n\n#### Syntax\n```js\nObject.setPrototypeOf(obj, prototype);\n```\n\n#### Parameters\n* obj - The object which is to have its prototype set.\n* prototype - The object's new prototype (an object or null).\n\n### Description\nThrows a TypeError exception if the object whose [[Prototype]] is to be modified is non-extensible according to Object.isExtensible(). Does nothing if the prototype parameter isn't an object or null (i.e., number, string, boolean, or undefined). Otherwise, this method changes the [[Prototype]] of obj to the new value.\n\n`Object.setPrototypeOf()` is in the latest ECMAScript 6 standard draft. It is generally considered the proper way to set the prototype of an object, vs. the more controversial `Object.prototype.__proto__` property.\n\n### License\nMIT","maintainers":[{"name":"tjmehta","email":"tejesh.mehta@gmail.com"}],"time":{"modified":"2022-06-26T18:19:46.216Z","created":"2015-10-10T21:39:39.756Z","1.0.0":"2015-10-10T21:39:39.756Z"},"homepage":"https://github.com/tjmehta/set-prototype-of#readme","keywords":["object","setprototypeof","set","prototype","of","polyfill","es6"],"repository":{"type":"git","url":"git+https://github.com/tjmehta/set-prototype-of.git"},"author":{"name":"Tejesh Mehta"},"bugs":{"url":"https://github.com/tjmehta/set-prototype-of/issues"},"license":"MIT","readmeFilename":"README.md"}