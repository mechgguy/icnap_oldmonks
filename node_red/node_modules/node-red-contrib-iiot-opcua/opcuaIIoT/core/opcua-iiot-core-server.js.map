{"version":3,"sources":["../src/core/opcua-iiot-core-server.ts"],"names":[],"mappings":"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","file":"opcua-iiot-core-server.js","sourcesContent":["/**\n The BSD 3-Clause License\n\n Copyright 2022 - DATATRONiQ GmbH (https://datatroniq.com)\n Copyright (c) 2018-2022 Klaus Landsdorf (http://node-red.plus/)\n Copyright 2015,2016 - Mika Karaila, Valmet Automation Inc. (node-red-contrib-opcua)\n All rights reserved.\n node-red-contrib-iiot-opcua\n */\n'use strict'\n// SOURCE-MAP-REQUIRED\n\nimport {TodoTypeAny} from \"../types/placeholders\";\nimport {\n  AddressSpace,\n  ApplicationType,\n  CallbackT,\n  DataType,\n  DataValue,\n  EndpointDescription,\n  extractFullyQualifiedDomainName,\n  ISessionContext,\n  LocalizedText,\n  makeApplicationUrn,\n  nodesets,\n  OPCUAServer,\n  OPCUAServerEndPoint,\n  OPCUAServerOptions,\n  RegisterServerMethod,\n  SecurityPolicy,\n  standardUnits,\n  StatusCodes,\n  UAEventType,\n  Variant,\n  VariantArrayType\n} from \"node-opcua\";\n\nimport {\n  availableMemory,\n  getNodeOPCUAServerPath,\n  getVariantValue,\n  initCoreServerNode,\n  setNodeStatusTo,\n} from \"./opcua-iiot-core\"\n\n\nimport debug from 'debug'\nimport path from 'path'\nimport {NodeStatus} from \"node-red\";\nimport {constructAlarmAddressSpaceDemo} from \"../helpers/alarms-and-conditions-demo\";\n\nconst internalDebugLog = debug('opcuaIIoT:server') // eslint-disable-line no-use-before-define\nconst detailDebugLog = debug('opcuaIIoT:server:details') // eslint-disable-line no-use-before-define\nconst isa95DebugLog = debug('opcuaIIoT:server:ISA95') // eslint-disable-line no-use-before-define\nconst isa95DetailDebugLog = debug('opcuaIIoT:server:ISA95:details') // eslint-disable-line no-use-before-define\nconst flex = {} // eslint-disable-line no-use-before-define\nconst flexInternalDebugLog = debug('opcuaIIoT:server:flex') // eslint-disable-line no-use-before-define\nconst flexDetailDebugLog = debug('opcuaIIoT:server:flex:details') // eslint-disable-line no-use-before-define\nlet simulatorInterval = null // eslint-disable-line no-use-before-define\nconst maxTimeInterval = 500000 // eslint-disable-line no-use-before-define\nlet timeInterval = 1 // eslint-disable-line no-use-before-define\nconst UNLIMITED_LISTENERS = 0 // eslint-disable-line no-use-before-define\nlet intervalList: TodoTypeAny[] = [] // eslint-disable-line no-use-before-define\nlet conditions = []\n\nconst simulateVariation = function (data: TodoTypeAny) {\n  let value = (1.0 + Math.sin(timeInterval / 360 * 3)) / 2.0\n\n  timeInterval++\n  if (timeInterval > maxTimeInterval) {\n    timeInterval = 1\n  }\n\n  if (data.tankLevel) {\n    data.tankLevel.setValueFromSource({dataType: 'Double', value})\n  }\n\n  if (data.tankLevel2) {\n    data.tankLevel2.setValueFromSource({dataType: 'Double', value})\n  }\n}\n\nconst constructAddressSpaceFromScript = function (server: TodoTypeAny, constructAddressSpaceScript: TodoTypeAny, eventObjects: TodoTypeAny) {\n  return new Promise(\n    (resolve, reject) => {\n      if (server.engine && constructAddressSpaceScript && constructAddressSpaceScript !== '') {\n        try {\n          constructAddressSpaceScript(server, server.engine.addressSpace, eventObjects, resolve)\n        } catch (err) {\n          reject(err)\n        }\n      } else {\n        reject(new Error('Wrong Parameters Construct AddressSpace From Script'))\n      }\n    })\n}\n\nconst constructAddressSpace = function (server: OPCUAServer, asoDemo: TodoTypeAny) {\n  return new Promise(\n    (resolve, reject) => {\n      if (!server) {\n        reject(new Error('Server Not Valid To Construct Address Space'))\n        return\n      }\n\n      const addressSpace = server.engine?.addressSpace\n\n      if (!addressSpace) {\n        reject(new Error('No AddressSpace From OPC UA Server Engine'))\n        return\n      }\n\n      addressSpace.installAlarmsAndConditionsService();\n\n      const namespace = addressSpace.getOwnNamespace()\n\n      const exclusiveLimitAlarmType = addressSpace.findEventType('ExclusiveLimitAlarmType') as UAEventType\n      if (!exclusiveLimitAlarmType) {\n        throw new Error(\"cannot find ExclusiveLimitAlarmType in namespace 0\");\n      }\n\n      let nonExclusiveLimitAlarmType = addressSpace.findEventType('NonExclusiveLimitAlarmType')\n      if (!nonExclusiveLimitAlarmType) {\n        throw new Error(\"cannot find NonExclusiveLimitAlarmType in namespace 0\");\n      }\n\n      let view = namespace.addView({\n        organizedBy: addressSpace?.rootFolder.views,\n        browseName: 'PLUS4NODERED_VIEW',\n        displayName: [\n          new LocalizedText({text: 'OPCUA-IIoT plus4nodered.com Server View', locale: 'en-US'}),\n          new LocalizedText({text: 'OPCUA-IIoT plus4nodered.com Server Sicht', locale: 'de-DE'})\n        ]\n      })\n\n      if (!asoDemo) {\n        resolve(null)\n      } else {\n        let data = {}\n        constructAlarmAddressSpaceDemo(data, addressSpace)\n\n        timeInterval = 1\n        simulatorInterval = setInterval(function () {\n          simulateVariation(data)\n        }, 500)\n\n        intervalList.push(simulatorInterval)\n\n        let vendorName = namespace.addObject({\n          organizedBy: addressSpace.rootFolder.objects,\n          typeDefinition: 'FolderType',\n          nodeId: 'i=1234',\n          browseName: 'PLUS4NODERED',\n          displayName: [\n            new LocalizedText({text: 'OPCUA-IIoT plus4nodered.com Server', locale: 'en-US'}),\n            new LocalizedText({text: 'OPCUA-IIoT plus4nodered.com Server', locale: 'de-DE'})\n          ],\n          eventNotifier: 1,\n          notifierOf: addressSpace.rootFolder.objects.server\n        })\n\n        let variable1 = 1\n        intervalList.push(setInterval(function () {\n          if (variable1 < 1000000) {\n            variable1 += 1\n          } else {\n            variable1 = 0\n          }\n        }, 100))\n\n        namespace.addVariable({\n          componentOf: vendorName,\n          nodeId: 'i=16479',\n          browseName: 'MyVariable1',\n          displayName: 'PLUS for Node-RED Double Variable',\n          dataType: 'Double',\n          value: {\n            get: function () {\n              return new Variant({\n                dataType: 'Double',\n                value: variable1\n              })\n            }\n          }\n        })\n\n        let variable2 = 10.0\n\n        namespace.addVariable({\n          componentOf: vendorName,\n          nodeId: 'b=1020FFAA',\n          browseName: 'MyVariable2',\n          displayName: 'PLUS for Node-RED Double Binary Variable',\n          dataType: 'Double',\n          value: {\n            get: function () {\n              return new Variant({\n                dataType: 'Double',\n                value: variable2\n              })\n            },\n            set: function (variant: TodoTypeAny) {\n              variable2 = parseFloat(variant.value)\n              return StatusCodes.Good\n            }\n          }\n        })\n\n        let variable3 = 1000.0\n\n        namespace.addVariable({\n          componentOf: vendorName,\n          nodeId: 's=TestReadWrite',\n          browseName: 'TestReadWrite',\n          displayName: 'PLUS for Node-RED Test Read and Write',\n          dataType: 'Double',\n          value: {\n            get: function () {\n              return new Variant({\n                dataType: 'Double',\n                value: variable3\n              })\n            },\n            set: function (variant: TodoTypeAny) {\n              variable3 = parseFloat(variant.value)\n              return StatusCodes.Good\n            }\n          }\n        })\n\n        let memoryVariable = namespace.addVariable({\n          componentOf: vendorName,\n          nodeId: 's=free_memory',\n          browseName: 'FreeMemory',\n          displayName: [\n            new LocalizedText({text: 'P4NR Free Memory', locale: 'en-US'}),\n            new LocalizedText({text: 'P4NR Freier Arbeitsspeicher', locale: 'de-DE'})\n          ],\n          dataType: 'Double',\n\n          value: {\n            get: function () {\n              return new Variant({\n                dataType: 'Double',\n                value: availableMemory()\n              })\n            }\n          }\n        })\n        addressSpace.installHistoricalDataNode(memoryVariable)\n\n        let counterValue = 0\n        intervalList.push(setInterval(function () {\n          if (counterValue < 65000) {\n            counterValue += 1\n          } else {\n            counterValue = 0\n          }\n        }, 1000))\n\n        let counterVariable = namespace.addVariable({\n          componentOf: vendorName,\n          nodeId: 's=Counter',\n          browseName: 'Counter',\n          displayName: [\n            new LocalizedText({text: 'P4NR Counter', locale: 'en-US'}),\n            new LocalizedText({text: 'P4NR Zähler', locale: 'de-DE'})\n          ],\n          dataType: 'UInt16',\n\n          value: {\n            get: function () {\n              return new Variant({\n                dataType: 'UInt16',\n                value: counterValue\n              })\n            }\n          }\n        })\n        addressSpace.installHistoricalDataNode(counterVariable)\n\n        let fullCounterValue = 8900\n\n        let fullCounterVariable = namespace.addVariable({\n          componentOf: vendorName,\n          eventSourceOf: vendorName,\n          nodeId: 's=FullCounter',\n          browseName: 'FullCounter',\n          displayName: [\n            new LocalizedText({text: 'P4NR Full-Counter', locale: 'en-US'}),\n            new LocalizedText({text: 'P4NR Voll-Zähler', locale: 'de-DE'})\n          ],\n          dataType: 'Int32',\n          value: {\n            get: function () {\n              return new Variant({\n                dataType: 'Int32',\n                value: fullCounterValue\n              })\n            }\n          }\n        })\n        addressSpace.installHistoricalDataNode(fullCounterVariable)\n\n        namespace.instantiateNonExclusiveLimitAlarm(nonExclusiveLimitAlarmType, {\n          componentOf: vendorName,\n          conditionSource: fullCounterVariable,\n          browseName: 'FullCounterLimitCondition',\n          displayName: new LocalizedText({text: 'Full Counter Limit Condition', locale: 'en-US'}),\n          description: 'ExclusiveLimitAlarmType Condition',\n          conditionName: 'FullCounterLimitCondition',\n          inputNode: fullCounterVariable,   // the variable that will be monitored for change\n          highHighLimit: 9990,\n          highLimit: 9000,\n          lowLimit: -9000,\n          lowLowLimit: -9990,\n          optionals: [\n            \"ConfirmedState\", \"Confirm\" // confirm state and confirm Method\n          ]\n        })\n\n        intervalList.push(setInterval(function () {\n          if (fullCounterValue < 10000) {\n            fullCounterValue += 1\n          } else {\n            fullCounterValue = -10000\n          }\n          fullCounterVariable.setValueFromSource({\n            dataType: DataType.Int32,\n            value: fullCounterValue\n          });\n        }, 100))\n\n        let externalValueWithSourceTimestamp = new DataValue({\n          value: new Variant({dataType: 'Double', value: 10.0}),\n          sourceTimestamp: null,\n          sourcePicoseconds: 0\n        })\n\n        intervalList.push(setInterval(function () {\n          externalValueWithSourceTimestamp.value.value = Math.random()\n          externalValueWithSourceTimestamp.sourceTimestamp = new Date()\n        }, 1000))\n\n        namespace.addVariable({\n          organizedBy: vendorName,\n          nodeId: 's=Pressure',\n          browseName: 'Pressure',\n          displayName: [\n            new LocalizedText({text: 'P4NR Pressure', locale: 'en-US'}),\n            new LocalizedText({text: 'P4NR Druck', locale: 'de-DE'})\n          ],\n          dataType: 'Double',\n          value: {\n            timestamped_get: function () {\n              return externalValueWithSourceTimestamp\n            }\n          }\n        })\n\n        namespace.addVariable({\n          organizedBy: vendorName,\n          nodeId: 's=Matrix',\n          browseName: 'Matrix',\n          displayName: [new LocalizedText({text: 'P4NR Matrix', locale: 'en-US'})],\n          dataType: 'Double',\n          valueRank: 2,\n          arrayDimensions: [3, 3],\n          value: {\n            get: function () {\n              return new Variant({\n                dataType: 'Double',\n                arrayType: VariantArrayType.Matrix,\n                dimensions: [3, 3],\n                value: [1, 2, 3, 4, 5, 6, 7, 8, 9]\n              })\n            }\n          }\n        })\n\n        namespace.addVariable({\n          organizedBy: vendorName,\n          nodeId: 's=Position',\n          browseName: 'Position',\n          displayName: [new LocalizedText({text: 'P4NR Position', locale: 'en-US'})],\n          dataType: 'Double',\n          valueRank: 1,\n          arrayDimensions: null,\n          value: {\n            get: function () {\n              return new Variant({\n                dataType: 'Double',\n                arrayType: VariantArrayType.Array,\n                value: [1, 2, 3, 4]\n              })\n            }\n          }\n        })\n\n        let pumpSpeed = namespace.addVariable({\n          organizedBy: vendorName,\n          nodeId: 's=PumpSpeed',\n          browseName: 'PumpSpeed',\n          displayName: [\n            new LocalizedText({text: 'P4NR Pump Speed', locale: 'en-US'}),\n            new LocalizedText({text: 'P4NR Geschwindigkeit Pumpe', locale: 'de-DE'})\n          ],\n          dataType: 'Double',\n          value: {\n            get: function () {\n              return new Variant({\n                dataType: 'Double',\n                value: 200 + 100 * Math.sin(Date.now() / 10000)\n              })\n            }\n          }\n        })\n\n        namespace.addVariable({\n          organizedBy: vendorName,\n          nodeId: 's=SomeDate',\n          browseName: 'SomeDate',\n          displayName: [\n            new LocalizedText({text: 'P4NR Some Date', locale: 'en-US'}),\n            new LocalizedText({text: 'P4NR Einfaches Datum', locale: 'de-DE'})\n          ],\n          dataType: 'DateTime',\n          value: {\n            get: function () {\n              return new Variant({\n                dataType: DataType.DateTime,\n                value: new Date(Date.UTC(2016, 9, 13, 8, 40, 0))\n              })\n            }\n          }\n        })\n\n        namespace.addVariable({\n          organizedBy: vendorName,\n          nodeId: 's=MultiLanguageText',\n          browseName: 'MultiLanguageText',\n          displayName: [\n            new LocalizedText({text: 'P4NR Multi Language Text', locale: 'en-US'}),\n            new LocalizedText({text: 'P4NR Mehrsprachiger Text', locale: 'de-DE'})\n          ],\n          dataType: 'LocalizedText',\n          value: {\n            get: function () {\n              return new Variant({\n                dataType: DataType.LocalizedText,\n                value: [{text: 'multilingual text', locale: 'en'},\n                  {text: 'plus4nodered.de mehrsprachiger Text', locale: 'de'},\n                  {text: 'plus4nodered.com texte multilingue', locale: 'fr'}]\n              })\n            }\n          }\n        })\n\n        let fanSpeed = namespace.addVariable({\n          organizedBy: vendorName,\n          nodeId: 's=FanSpeed',\n          browseName: 'FanSpeed',\n          displayName: [\n            new LocalizedText({text: 'P4NR Fan Speed', locale: 'en-US'}),\n            new LocalizedText({text: 'P4NR Geschwindigkeit Lüfter', locale: 'de-DE'})\n          ],\n          dataType: 'Double',\n          value: new Variant({dataType: 'Double', value: 1000.0})\n        })\n\n        intervalList.push(setInterval(function () {\n          fanSpeed.setValueFromSource(new Variant({\n            dataType: 'Double',\n            value: 1000.0 + (Math.random() * 100 - 50)\n          }))\n        }, 10))\n\n        let method = namespace.addMethod(\n          vendorName, {\n            nodeId: 'i=12345',\n            browseName: 'Bark',\n\n            inputArguments: [\n              {\n                name: 'barks',\n                dataType: 'UInt32',\n                description: {text: 'specifies the number of time I should bark'}\n              }, {\n                name: 'volume',\n                dataType: 'UInt32',\n                description: {text: 'specifies the sound volume [0 = quiet ,100 = loud]'}\n              }\n            ],\n\n            outputArguments: [{\n              name: 'Barks',\n              dataType: 'String',\n              description: {text: 'the generated barks'},\n              valueRank: 1\n            }]\n          })\n\n        method.bindMethod(function (inputArguments: Variant[], context: ISessionContext, callback: CallbackT<TodoTypeAny>) {\n          let nbBarks = inputArguments[0].value\n          let volume = inputArguments[1].value\n          let soundVolume = new Array(volume).join('!')\n          let barks = []\n\n          for (let i = 0; i < nbBarks; i++) {\n            barks.push('Whaff' + soundVolume)\n          }\n\n          let callMethodResult = {\n            statusCode: StatusCodes.Good,\n            outputArguments: [{\n              dataType: DataType.String,\n              arrayType: VariantArrayType.Array,\n              value: barks\n            }]\n          }\n          callback(null, callMethodResult)\n        })\n\n        let temperatureValue = 170\n\n        let analogItemNode = namespace.addAnalogDataItem({\n          componentOf: vendorName,\n          eventSourceOf: vendorName,\n          nodeId: 's=TemperatureAnalogItem',\n          browseName: 'TemperatureAnalogItem',\n          displayName: [\n            new LocalizedText({text: 'P4NR Temperature', locale: 'en-US'}),\n            new LocalizedText({text: 'P4NR Temperatur', locale: 'de-DE'})\n          ],\n          definition: '(tempA -25) + tempB',\n          valuePrecision: 0.5,\n          engineeringUnitsRange: {low: 100, high: 200},\n          instrumentRange: {low: -100, high: +200},\n          engineeringUnits: standardUnits.degree_celsius,\n          dataType: 'Double',\n          value: {\n            get: function () {\n              return new Variant({\n                dataType: 'Double',\n                value: temperatureValue\n              })\n            }\n          }\n        })\n\n        namespace.instantiateExclusiveLimitAlarm(exclusiveLimitAlarmType, {\n          componentOf: vendorName,\n          conditionSource: analogItemNode,\n          browseName: 'TemperatureLimitCondition',\n          displayName: new LocalizedText({text: 'Temperature Limit Condition', locale: 'en-US'}),\n          description: 'ExclusiveLimitAlarmType Condition',\n          conditionName: 'TemperatureLimitCondition',\n          inputNode: analogItemNode,   // the variable that will be monitored for change\n          highHighLimit: 240,\n          highLimit: 200,\n          lowLimit: 100,\n          lowLowLimit: 10,\n          optionals: [\n            \"ConfirmedState\", \"Confirm\" // confirm state and confirm Method\n          ]\n        })\n\n        intervalList.push(setInterval(function () {\n          if (temperatureValue < 250) {\n            temperatureValue += 0.5\n          } else {\n            temperatureValue = -40\n          }\n          analogItemNode.setValueFromSource({\n            dataType: DataType.Double,\n            value: temperatureValue\n          });\n        }, 500))\n\n        view.addReference({\n          referenceType: 'Organizes',\n          nodeId: pumpSpeed.nodeId\n        })\n\n        resolve('')\n      }\n    })\n}\n\nconst buildGeneralServerOptions = async (node: TodoTypeAny, prefix: string) => {\n  let serverOptions: TodoTypeAny = await buildServerOptions(node, prefix)\n  serverOptions.userManager = {\n    isValidUser: function (userName: string, password: string) {\n      return checkUser(node, userName, password)\n    }\n  }\n  return setDiscoveryOptions(node, serverOptions)\n}\n\nconst destructAddressSpace = function (done: () => void) {\n  intervalList.forEach(function (value: TodoTypeAny, index: number, list: TodoTypeAny[]) {\n    clearInterval(value)\n    list[index] = null\n  })\n  intervalList = []\n  done()\n}\n\nconst start = function (server: OPCUAServer, node: TodoTypeAny) {\n  return new Promise(\n    function (resolve, reject) {\n      if (!server) {\n        reject(new Error('Server Not Valid To Start'))\n        return\n      }\n\n      if (!node) {\n        reject(new Error('Node Not Valid To Start'))\n        return\n      }\n      server.start(() => {\n        node.iiot.initialized = true\n\n        if (server.endpoints?.length) {\n          server.endpoints.forEach((endpoint: OPCUAServerEndPoint) => {\n            endpoint.endpointDescriptions().forEach((endpointDescription: EndpointDescription) => {\n              internalDebugLog('Server endpointUrl:', endpointDescription.endpointUrl,\n                'securityMode:', endpointDescription.securityMode.toString(),\n                'securityPolicyUri:', endpointDescription.securityPolicyUri ? endpointDescription.securityPolicyUri?.toString() : 'None Security Policy Uri'\n              );\n            })\n          })\n          let endpointUrl = server.endpoints[0].endpointDescriptions()[0].endpointUrl\n          internalDebugLog('Primary Server Endpoint URL ' + endpointUrl)\n        }\n\n        server.on('newChannel', function (channel: TodoTypeAny) {\n          internalDebugLog('Client connected with address = ' +\n            channel.remoteAddress + ' port = ' + channel.remotePort\n          )\n        })\n\n        server.on('closeChannel', function (channel: TodoTypeAny) {\n          internalDebugLog('Client disconnected with address = ' +\n            channel.remoteAddress + ' port = ' + channel.remotePort\n          )\n        })\n\n        server.on('create_session', function (session: TodoTypeAny) {\n          internalDebugLog('############## SESSION CREATED ##############')\n          if (session.clientDescription) {\n            detailDebugLog('Client application URI:' + session.clientDescription.applicationUri)\n            detailDebugLog('Client product URI:' + session.clientDescription.productUri)\n            detailDebugLog('Client application name:' + session.clientDescription.applicationName ? session.clientDescription.applicationName.toString() : 'none application name')\n            detailDebugLog('Client application type:' + session.clientDescription.applicationType ? session.clientDescription.applicationType.toString() : 'none application type')\n          }\n\n          internalDebugLog('Session name:' + session.sessionName ? session.sessionName.toString() : 'none session name')\n          internalDebugLog('Session timeout:' + session.sessionTimeout)\n          internalDebugLog('Session id:' + session.sessionId)\n        })\n\n        server.on('session_closed', function (session: TodoTypeAny, reason: TodoTypeAny) {\n          internalDebugLog('############## SESSION CLOSED ##############')\n          internalDebugLog('reason:' + reason)\n          internalDebugLog('Session name:' + session.sessionName ? session.sessionName.toString() : 'none session name')\n        })\n\n        internalDebugLog('Server Initialized')\n\n        if (server.serverInfo) {\n          detailDebugLog('Server Info:' + JSON.stringify(server.serverInfo))\n        }\n\n        resolve('')\n      })\n    })\n}\n\nconst readConfigOfServerNode = function (node: TodoTypeAny, config: TodoTypeAny) {\n  node.name = config.name\n\n  // network\n  node.port = config.port\n  node.endpoint = config.endpoint\n  node.alternateHostname = config.alternateHostname\n\n  // limits\n  node.maxAllowedSessionNumber = parseInt(config.maxAllowedSessionNumber) || 10\n  node.maxConnectionsPerEndpoint = parseInt(config.maxConnectionsPerEndpoint) || 10\n  node.maxAllowedSubscriptionNumber = parseInt(config.maxAllowedSubscriptionNumber) || 50\n  node.maxNodesPerRead = config.maxNodesPerRead || 1000\n  node.maxNodesPerBrowse = config.maxNodesPerBrowse || 2000\n\n  node.delayToClose = config.delayToClose || 1000\n  node.showStatusActivities = config.showStatusActivities\n  node.showErrors = config.showErrors\n\n  // certificates\n  node.individualCerts = config.individualCerts\n  node.publicCertificateFile = config.publicCertificateFile\n  node.privateCertificateFile = config.privateCertificateFile\n\n  // Security\n  node.allowAnonymous = config.allowAnonymous\n  // User Management\n  node.opcuaUsers = config.users\n  // XML-Set Management\n  node.xmlsets = config.xmlsets\n  // Audit\n  node.isAuditing = config.isAuditing\n\n  // discovery\n  node.disableDiscovery = !config.serverDiscovery\n  node.registerServerMethod = config.registerServerMethod || 1\n  node.discoveryServerEndpointUrl = config.discoveryServerEndpointUrl\n  node.capabilitiesForMDNS = (config.capabilitiesForMDNS) ? config.capabilitiesForMDNS.split(',') : [config.capabilitiesForMDNS]\n}\n\nconst initServerNode = function (node: TodoTypeAny) {\n  node.iiot = initCoreServerNode()\n  if (node.setMaxListeners)\n    node.setMaxListeners(UNLIMITED_LISTENERS)\n}\n\nconst loadNodeSets = function (node: TodoTypeAny, dirname: string) {\n  let standardNodeSetFile = nodesets.standard\n  let xmlFiles = [standardNodeSetFile]\n\n  if (node.xmlsets) {\n    node.xmlsets.forEach((xmlsetFileName: TodoTypeAny) => {\n      detailDebugLog('Load XML Set for ' + xmlsetFileName.name)\n      if (xmlsetFileName.path) {\n        if (xmlsetFileName.path.startsWith('public/vendor/')) {\n          xmlFiles.push(path.join(dirname, xmlsetFileName.path))\n        } else {\n          xmlFiles.push(xmlsetFileName.path)\n        }\n      }\n    })\n    detailDebugLog('appending xmlFiles: ' + xmlFiles.toString())\n  }\n\n  detailDebugLog('node set:' + xmlFiles.toString())\n  node.iiot.xmlFiles = xmlFiles\n}\n\nconst loadCertificates = function (node: TodoTypeAny) {\n  const nodeOPCUAServerPath = getNodeOPCUAServerPath()\n\n  detailDebugLog('config: ' + node.publicCertificateFile)\n  if (!node.individualCerts || node.publicCertificateFile === null || node.publicCertificateFile === '') {\n    node.publicCertificateFile = path.join(nodeOPCUAServerPath, '/certificates/server_selfsigned_cert_2048.pem')\n    detailDebugLog('default key: ' + node.publicCertificateFile)\n  }\n\n  detailDebugLog('config: ' + node.privateCertificateFile)\n  if (!node.individualCerts || node.privateCertificateFile === null || node.privateCertificateFile === '') {\n    node.privateCertificateFile = path.join(nodeOPCUAServerPath, '/certificates/PKI/own/private/private_key.pem')\n    detailDebugLog('default key: ' + node.privateCertificateFile)\n  }\n\n  return node\n}\n\nconst checkUser = function (node: TodoTypeAny, userName: string, password: string) {\n  // valid if there is no user in the server\n  if(node.opcuaUsers && node.opcuaUsers.length < 1) return true\n\n  let isValidUser = false\n  detailDebugLog('Server User Request For ' + userName)\n\n  node.opcuaUsers.forEach(function (user: TodoTypeAny) {\n    if (userName === user.name && password === user.password) {\n      isValidUser = true\n    }\n  })\n\n  if (isValidUser) {\n    detailDebugLog('Valid Server User Found')\n  } else {\n    detailDebugLog('Server User ' + userName + ' Not Found')\n  }\n\n  return isValidUser\n}\n\nconst initRegisterServerMethod = function (node: TodoTypeAny) {\n  node.iiot.initialized = false\n  node.iiot.opcuaServer = null\n\n  if (!node.registerServerMethod) {\n    node.registerServerMethod = RegisterServerMethod.HIDDEN\n  } else {\n    switch (parseInt(node.registerServerMethod)) {\n      case 2:\n        node.registerServerMethod = RegisterServerMethod.MDNS\n        break\n      case 3:\n        node.registerServerMethod = RegisterServerMethod.LDS\n        break\n      default:\n        node.registerServerMethod = RegisterServerMethod.HIDDEN\n    }\n  }\n  return node\n}\n\nconst setDiscoveryOptions = function (node: TodoTypeAny, serverOptions: TodoTypeAny) {\n  if (!node.disableDiscovery) {\n    serverOptions.registerServerMethod = node.registerServerMethod\n\n    if (node.discoveryServerEndpointUrl && node.discoveryServerEndpointUrl !== '') {\n      serverOptions.discoveryServerEndpointUrl = node.discoveryServerEndpointUrl\n    }\n\n    if (node.capabilitiesForMDNS && node.capabilitiesForMDNS.length) {\n      serverOptions.capabilitiesForMDNS = node.capabilitiesForMDNS\n    }\n  } else {\n    node.registerServerMethod = RegisterServerMethod.HIDDEN\n  }\n  return serverOptions\n}\n\nconst getAddressSpace = function (node: TodoTypeAny, msg: TodoTypeAny, errorHandler: (err: Error, msg: TodoTypeAny) => void): AddressSpace | null {\n  if (!node.iiot.opcuaServer?.engine?.addressSpace) {\n    errorHandler(new Error('Server AddressSpace Not Valid'), msg)\n    return null\n  }\n\n  return node.iiot.opcuaServer.engine.addressSpace\n}\n\nconst addVariableToAddressSpace = function (node: TodoTypeAny, msg: TodoTypeAny, humanReadableType: TodoTypeAny, isProperty: boolean, errorHandler: (err: Error, msg: TodoTypeAny) => void) {\n  let addressSpace = getAddressSpace(node, msg, errorHandler)\n\n  if (!addressSpace) {\n    return\n  }\n\n  let rootFolder = addressSpace.findNode(msg.payload.referenceNodeId)\n  let variableData = getVariantValue(msg.payload.datatype, msg.payload.value)\n\n  let newNodeOPCUAVariable: TodoTypeAny = {}\n\n  if (isProperty) {\n    newNodeOPCUAVariable = {\n      propertyOf: rootFolder\n      // modellingRule: 'Mandatory'\n    }\n  } else {\n    newNodeOPCUAVariable = {\n      componentOf: rootFolder\n    }\n  }\n\n  newNodeOPCUAVariable.nodeId = msg.payload.nodeId\n  newNodeOPCUAVariable.browseName = msg.payload.browsename\n  newNodeOPCUAVariable.displayName = new LocalizedText({locale: \"en-US\", text: msg.payload.displayname})\n  newNodeOPCUAVariable.dataType = msg.payload.datatype\n  newNodeOPCUAVariable.value = {\n    get() {\n      return new Variant({\n        dataType: DataType[msg.payload.datatype],\n        value: variableData\n      })\n    },\n    set(variant: TodoTypeAny) {\n      variableData = variant.value\n      return StatusCodes.Good\n    }\n  }\n\n  addressSpace.getOwnNamespace().addVariable(newNodeOPCUAVariable)\n  internalDebugLog(msg.payload.nodeId + ' ' + humanReadableType + ' Added To Address Space')\n}\n\nconst addObjectToAddressSpace = function (node: TodoTypeAny, msg: TodoTypeAny, humanReadableType: TodoTypeAny, errorHandler: (err: Error, msg: TodoTypeAny) => void) {\n  let addressSpace = getAddressSpace(node, msg, errorHandler)\n\n  if (!addressSpace) {\n    return\n  }\n\n  let rootFolder = addressSpace.findNode(msg.payload.referenceNodeId)\n\n  if (rootFolder) {\n    let newNodeOPCUObject = {\n      organizedBy: rootFolder,\n      typeDefinition: msg.payload.objecttype,\n      nodeId: msg.payload.nodeId,\n      browseName: msg.payload.browsename,\n      displayName: new LocalizedText({locale: null, text: msg.payload.displayname})\n    }\n\n    addressSpace.getOwnNamespace().addObject(newNodeOPCUObject)\n    internalDebugLog(msg.payload.nodeId + ' ' + humanReadableType + ' Added To Address Space')\n  } else {\n    errorHandler(new Error('Root Reference Not Found'), msg)\n  }\n}\n\nconst deleteNodeFromAddressSpace = function (node: TodoTypeAny, msg: TodoTypeAny, errorHandler: (err: Error, msg: TodoTypeAny) => void) {\n  let addressSpace = getAddressSpace(node, msg, errorHandler)\n  if (!addressSpace) {\n    return\n  }\n  if (msg.payload.nodeId) {\n    let searchedNode = addressSpace.findNode(msg.payload.nodeId)\n    if (searchedNode) {\n      internalDebugLog('Delete NodeId ' + msg.payload.nodeId)\n      addressSpace.deleteNode(searchedNode)\n    } else {\n      internalDebugLog('Delete NodeId Not Found ' + msg.payload.nodeId)\n    }\n  } else {\n    errorHandler(new Error('OPC UA Command NodeId Not Valid'), msg)\n  }\n}\n\nconst restartServer = function (node: TodoTypeAny, statusHandler: (status: string | NodeStatus) => void, emitHandler: (eventName: string | symbol, ...args: any[]) => void, sendHandler: (msg: TodoTypeAny) => void) {\n  if (node.iiot.opcuaServer) {\n    node.iiot.opcuaServer.shutdown(function () {\n      emitHandler('shutdown')\n    })\n  } else {\n    node.iiot.opcuaServer = null\n    emitHandler('shutdown')\n  }\n\n  sendHandler({payload: 'server shutdown'})\n  node.oldStatusParameter = setNodeStatusTo(node, 'shutdown', node.oldStatusParameter, node.showStatusActivities, statusHandler)\n}\n\nconst createServerNameWithPrefix = function (serverPort: number, prefix: TodoTypeAny) {\n  let serverPrefix = (prefix !== '') ? prefix + '-' : prefix\n  return 'NodeRED-IIoT-' + serverPrefix + 'Server-' + serverPort\n}\n\nconst buildServerOptions = async (node: TodoTypeAny, prefix: TodoTypeAny) => {\n  let today = new Date()\n\n  // const SecurityPolicy = require(\"node-opcua\").SecurityPolicy;\n  return {\n    defaultSecureTokenLifetime: 60000000,\n    port: typeof node.port === 'string' ? parseInt(node.port) : node.port,\n    nodeset_filename: node.iiot.xmlFiles,\n    resourcePath: '/' + node.endpoint || 'UA/NodeRED' + prefix + 'IIoTServer',\n    buildInfo: {\n      productName: node.name || 'NodeOPCUA IIoT Server',\n      buildNumber: today.getTime().toString(),\n      buildDate: today\n    },\n    serverCapabilities: {\n      operationLimits: {\n        maxNodesPerRead: node.maxNodesPerRead,\n        maxNodesPerBrowse: node.maxNodesPerBrowse\n      }\n    },\n    serverInfo: {\n      applicationType: ApplicationType.Server,\n      applicationUri: makeApplicationUrn(await extractFullyQualifiedDomainName(), createServerNameWithPrefix(node.port, prefix)),\n      productUri: createServerNameWithPrefix(node.port, prefix),\n      applicationName: {text: 'Node-RED', locale: 'en'},\n      gatewayServerUri: null,\n      discoveryProfileUri: null,\n      discoveryUrls: []\n    },\n    maxAllowedSessionNumber: node.maxAllowedSessionNumber,\n    maxConnectionsPerEndpoint: node.maxConnectionsPerEndpoint,\n    allowAnonymous: node.allowAnonymous,\n    securityPolicies: [\n      SecurityPolicy.None,\n      SecurityPolicy.Basic128,\n      SecurityPolicy.Basic192,\n      SecurityPolicy.Basic192Rsa15,\n      SecurityPolicy.Basic256Rsa15,\n      SecurityPolicy.Basic256Sha256,\n      SecurityPolicy.Aes128_Sha256_RsaOaep,\n      SecurityPolicy.Aes256_Sha256_RsaPss,\n      SecurityPolicy.PubSub_Aes128_CTR,\n      SecurityPolicy.PubSub_Aes256_CTR\n    ],\n    certificateFile: node.publicCertificateFile,\n    privateKeyFile: node.privateCertificateFile,\n    alternateHostname: node.alternateHostname || '',\n    userManager: checkUser,\n    isAuditing: node.isAuditing,\n    registerServerMethod: node.registerServerMethod,\n    disableDiscovery: node.disableDiscovery\n  }\n}\nconst createServer = async (node: TodoTypeAny, serverOptions: TodoTypeAny, postInitialize: () => void, statusHandler: (status: string | NodeStatus) => void, verbose: boolean = false) => {\n  /* istanbul ignore next */\n  if (verbose) {\n    coreServer.flexDetailDebugLog('serverOptions:' + JSON.stringify(serverOptions))\n  }\n  const options = await serverOptions\n\n  node.iiot.opcuaServer = await coreServer.createServerObject(node.maxAllowedSubscriptionNumber, options)\n  node.oldStatusParameter = setNodeStatusTo(node, 'waiting', node.oldStatusParameter, node.showStatusActivities, statusHandler)\n  await node.iiot.opcuaServer.initialize()\n  postInitialize()\n  coreServer.setOPCUAServerListener(node)\n}\n\nconst createServerObject = async (maxSubscriptions: number, serverOptions: OPCUAServerOptions) => {\n  // TODO: now via serverOptions.serverCapabilities.maxSessions\n\n  serverOptions.maxAllowedSessionNumber = maxSubscriptions || 10\n  let server =  new OPCUAServer(serverOptions)\n  // TODO: later at server.engine.serverCapabilities.maxSessions = maxSubscriptions || 10\n  return server\n}\n\nconst setOPCUAServerListener = function (node: TodoTypeAny) {\n  node.iiot.opcuaServer.on('newChannel', function (channel: TodoTypeAny) {\n    internalDebugLog('Client connected new channel with address = ', channel.remoteAddress, ' port = ', channel.remotePort)\n  })\n\n  node.iiot.opcuaServer.on('closeChannel', function (channel: TodoTypeAny) {\n    internalDebugLog('Client disconnected close channel with address = ', channel.remoteAddress, ' port = ', channel.remotePort)\n  })\n\n  node.iiot.opcuaServer.on('post_initialize', function () {\n    internalDebugLog('initialized')\n  })\n}\n\nconst coreServer = {\n  internalDebugLog,\n  detailDebugLog,\n  isa95DebugLog,\n  isa95DetailDebugLog,\n  flexInternalDebugLog,\n  flexDetailDebugLog,\n\n  maxTimeInterval,\n  timeInterval,\n  simulatorInterval,\n\n  simulateVariation,\n  constructAddressSpaceFromScript,\n  constructAddressSpace,\n  destructAddressSpace,\n  start,\n  readConfigOfServerNode,\n  initServerNode,\n  loadNodeSets,\n  loadCertificates,\n  checkUser,\n  initRegisterServerMethod,\n  setDiscoveryOptions,\n  getAddressSpace,\n  addVariableToAddressSpace,\n  addObjectToAddressSpace,\n  deleteNodeFromAddressSpace,\n  restartServer,\n  createServerNameWithPrefix,\n  createServerObject,\n  setOPCUAServerListener,\n  buildGeneralServerOptions,\n  createServer,\n}\n\nexport default coreServer\n"]}