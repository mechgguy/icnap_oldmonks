{"version":3,"sources":["../src/opcua-iiot-browser.ts"],"names":[],"mappings":"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","file":"opcua-iiot-browser.js","sourcesContent":["/*\n The BSD 3-Clause License\n\n Copyright 2022 - DATATRONiQ GmbH (https://datatroniq.com)\n Copyright (c) 2018-2022 Klaus Landsdorf (http://node-red.plus/)\n Copyright 2015,2016 - Mika Karaila, Valmet Automation Inc. (node-red-contrib-opcua)\n All rights reserved.\n node-red-contrib-iiot-opcua\n */\n'use strict'\nimport * as nodered from \"node-red\";\nimport {NodeMessage, NodeStatus} from \"node-red\";\nimport {Node, NodeMessageInFlow} from \"@node-red/registry\";\n\nimport coreBrowser, {BrowserInputPayload, BrowserInputPayloadLike, Entry} from \"./core/opcua-iiot-core-browser\";\nimport {\n  checkConnectorState,\n  checkSessionNotValid,\n  deregisterToConnector,\n  FAKTOR_SEC_TO_MSEC,\n  OBJECTS_ROOT,\n  registerToConnector,\n  resetIiotNode,\n  setNodeStatusTo\n} from \"./core/opcua-iiot-core\";\nimport {BrowseResult, ClientSession, NodeId} from \"node-opcua\";\nimport {AddressSpaceItem} from \"./types/helpers\";\nimport {ListenPayload} from \"./opcua-iiot-listener\";\nimport {ReferenceDescription} from \"node-opcua-types/dist/_generated_opcua_types\";\nimport {NodeIdLike} from \"node-opcua-nodeid\";\nimport {CompressedBrowseResult} from \"./core/opcua-iiot-core-response\";\n\ninterface OPCUAIIoTBrowserNodeDef extends nodered.NodeDef {\n  nodeId: NodeIdLike\n  name: string\n  justValue: boolean\n  sendNodesToRead: boolean\n  sendNodesToBrowser: boolean\n  sendNodesToListener: boolean\n  multipleOutputs: boolean\n  showStatusActivities: boolean\n  showErrors: boolean\n  recursiveBrowse: boolean\n  recursiveDepth: number\n  delayPerMessage: number\n  connector: string\n}\n\ninterface OPCUAIIoTBrowser extends nodered.Node {\n  nodeId: NodeIdLike\n  name: string\n  justValue: boolean\n  sendNodesToRead: boolean\n  sendNodesToBrowser: boolean\n  sendNodesToListener: boolean\n  multipleOutputs: boolean\n  showStatusActivities: boolean\n  showErrors: boolean\n  recursiveBrowse: boolean\n  recursiveDepth: number\n  delayPerMessage: number\n  connector: Node\n}\n\ntype IIoTNode = {\n  opcuaSession?: ClientSession | null\n}\n\ntype BrowseNodeWithConfig = {\n  iiot?: IIoTNode\n  browseTopic?: string\n  delayMessageTimer?: NodeJS.Timer\n} & OPCUAIIoTBrowser\n\nexport type BrowserPayload = {\n  nodetype: \"browse\",\n  injectType: string,\n  addressSpaceItems: AddressSpaceItem[],\n  manualInject: boolean,\n  justValue: boolean,\n  rootNodeId: NodeIdLike,\n  recursiveBrowse: boolean,\n  recursiveDepth: number,\n  recursiveDepthMax: number,\n  listenerParameters?: ListenPayload\n  browserResults: BrowseResult[]\n  value?: BrowseResult[] | CompressedBrowseResult[]\n}\n\ninterface Lists {\n  browserResults: BrowseResult[]\n  nodesToRead: (NodeId | string)[]\n  addressSpaceItemList: AddressSpaceItem[]\n  addressItemList: AddressSpaceItem[]\n  nodesToBrowse: AddressSpaceItem[],\n}\n\n/**\n * Browser Node-RED node.\n *\n * @param RED\n */\nmodule.exports = function (RED: nodered.NodeAPI) {\n  // SOURCE-MAP-REQUIRED\n\n  function OPCUAIIoTBrowser(this: OPCUAIIoTBrowser, config: OPCUAIIoTBrowserNodeDef) {\n    RED.nodes.createNode(this, config)\n\n    this.nodeId = config.nodeId\n    this.name = config.name\n    this.justValue = config.justValue\n    this.sendNodesToRead = config.sendNodesToRead\n    this.sendNodesToBrowser = config.sendNodesToBrowser\n    this.sendNodesToListener = config.sendNodesToListener\n    this.multipleOutputs = config.multipleOutputs\n    this.showStatusActivities = config.showStatusActivities\n    this.showErrors = config.showErrors\n    this.recursiveBrowse = config.recursiveBrowse\n    this.recursiveDepth = config.recursiveDepth || 1\n    this.delayPerMessage = config.delayPerMessage || 0.2\n\n    this.connector = RED.nodes.getNode(config.connector)\n\n    let self: BrowseNodeWithConfig | any = this;\n    const {iiot, browseTopic} = coreBrowser.initBrowserNode();\n    self.browseTopic = browseTopic;\n    self.iiot = iiot;\n\n    self.iiot.delayMessageTimer = []\n\n    const extractDataFromBrowserResults = (browserResultToFilter: BrowseResult[], lists: Lists) => {\n      lists.addressItemList = []\n\n      browserResultToFilter.forEach((result: BrowseResult) => {\n        result.references?.forEach((reference: ReferenceDescription) => {\n          coreBrowser.detailDebugLog('Add Reference To List :' + reference)\n          lists.browserResults.push(coreBrowser.transformToEntry(reference) as BrowseResult)\n\n          if (reference.nodeId) {\n            lists.nodesToRead.push(reference.nodeId.toString())\n\n            lists.addressItemList.push({\n              nodeId: reference.nodeId.toString(),\n              browseName: reference.browseName.toString(),\n              displayName: reference.displayName.toString(),\n              nodeClass: reference.nodeClass.toString(),\n              datatypeName: reference.typeDefinition.toString()\n            })\n          }\n        })\n      })\n\n      lists.addressSpaceItemList = lists.addressSpaceItemList.concat(lists.addressItemList)\n    }\n\n    type BrowseCallback = (rootNodeId: NodeIdLike, depth: number, msg: NodeMessageInFlow, lists: Lists) => void\n\n    const browse = function (rootNodeId: NodeId, msg: NodeMessageInFlow, depth: number, lists: Lists, callback: BrowseCallback) {\n      if (checkSessionNotValid(self.connector.iiot.opcuaSession, 'Browse')) {\n        return\n      }\n\n      coreBrowser.internalDebugLog('Browse Topic To Call Browse ' + rootNodeId)\n      let rootNode = 'list'\n\n      coreBrowser.browse(self.connector.iiot.opcuaSession, rootNodeId)\n        .then((browserResults: BrowseResult[]) => {\n          if (browserResults.length) {\n            coreBrowser.detailDebugLog('Browser Result To String: ' + browserResults.toString())\n            extractDataFromBrowserResults(browserResults, lists)\n            if (self.recursiveBrowse) {\n              if (depth > 0) {\n                let newDepth = depth - 1\n\n                let subLists = createListsObject()\n                if (self.multipleOutputs) {\n                  callback(rootNode, depth, msg, lists)\n                } else {\n                  subLists = lists\n                  browseNodeList(lists.addressItemList, msg, newDepth, subLists, callback)\n                }\n              } else {\n                coreBrowser.internalDebugLog('Minimum Depth Reached On Browse At ' + rootNodeId)\n                callback(rootNodeId, depth, msg, lists)\n              }\n            } else {\n              callback(rootNodeId, depth, msg, lists)\n            }\n          } else {\n            coreBrowser.internalDebugLog('No Browse Results On ' + rootNodeId)\n          }\n        }).catch(function (err: Error) {\n        coreBrowser.browseErrorHandling(self, err, msg, lists, callError, statusHandler)\n      })\n    }\n\n    const callError = (err: Error, msg: NodeMessageInFlow): void => {\n      this.error(err, msg)\n    }\n\n    const createListsObject = (): Lists => {\n      return {\n        nodesToBrowse: [],\n        nodesToRead: [],\n        addressItemList: [],\n        addressSpaceItemList: [],\n        browserResults: []\n      }\n    }\n\n    const browseNodeList = (addressSpaceItems: AddressSpaceItem[], msg: NodeMessageInFlow, depth: number, lists: Lists, callback: BrowseCallback) => {\n      if (checkSessionNotValid(self.connector.iiot.opcuaSession, 'BrowseList')) {\n        return\n      }\n\n      coreBrowser.internalDebugLog('Browse For NodeId List')\n      let rootNode = 'list'\n\n      if (self.connector.iiot.opcuaSession) {\n        coreBrowser.browseAddressSpaceItems(self.connector.iiot.opcuaSession, addressSpaceItems)\n          .then((browserResults: BrowseResult[]) => {\n            coreBrowser.detailDebugLog('List Browser Result To String: ' + browserResults.toString())\n            extractDataFromBrowserResults(browserResults, lists)\n            if (self.recursiveBrowse) {\n              if (depth > 0) {\n                let newDepth = depth - 1\n\n                let subLists = createListsObject()\n                if (self.multipleOutputs) {\n                  callback(rootNode, depth, msg, lists)\n                } else {\n                  subLists = lists\n                }\n                browseNodeList(lists.addressItemList, msg, newDepth, subLists, callback)\n              } else {\n                coreBrowser.internalDebugLog('Minimum Depth Reached On Browse List')\n                callback(rootNode, depth, msg, lists)\n              }\n            } else {\n              callback(rootNode, depth, msg, lists)\n            }\n          }).catch(function (err: Error) {\n          coreBrowser.browseErrorHandling(self, err, msg, lists, callError, statusHandler)\n        })\n      }\n    }\n\n    const sendMessage = (rootNodeId: NodeIdLike, depth: number, originMessage: NodeMessageInFlow, lists: Lists) => {\n      if (!lists) {\n        coreBrowser.internalDebugLog('Lists Not Valid!')\n        if (self.showErrors) {\n          this.error(new Error('Lists Not Valid On Browse Send Message'), originMessage)\n        }\n      }\n\n      const listenerParameters = getListenParameters((originMessage.payload as any))\n\n      const payload: BrowserPayload = {\n        ...(originMessage.payload as BrowserInputPayload),\n        nodetype: 'browse',\n        justValue: self.justValue,\n        rootNodeId,\n        // @ts-ignore because TS is misunderstanding lists.brwoserResults type\n        browserResults: lists.browserResults,\n        recursiveBrowse: self.recursiveBrowse,\n        recursiveDepth: depth,\n        recursiveDepthMax: self.recursiveDepth,\n        listenerParameters,\n        ...enhanceMessage(lists),\n        ...setMessageLists(lists)\n      }\n      const newMessaage = {\n        ...originMessage,\n        payload\n      }\n\n      self.iiot.messageList.push(newMessaage)\n\n      if (self.showStatusActivities && self.oldStatusParameter.text !== 'active') {\n        self.oldStatusParameter = setNodeStatusTo(self, 'active', self.oldStatusParameter, self.showStatusActivities, statusHandler)\n      }\n\n      self.iiot.delayMessageTimer.push(setTimeout(() => {\n        this.send(self.iiot.messageList.shift())\n      }, self.delayPerMessage * FAKTOR_SEC_TO_MSEC))\n    }\n\n    const resetAllTimer = function () {\n      self.iiot.delayMessageTimer.forEach((timerId: NodeJS.Timeout | null) => {\n        if (timerId)\n          clearTimeout(timerId)\n        timerId = null\n      })\n    }\n\n    const getListenParameters = (payload: ListenPayload | undefined): ListenPayload | undefined => {\n      if (payload?.injectType === 'listen') {\n        return payload\n      } else {\n        return undefined\n      }\n    }\n\n    const enhanceMessage = (lists: Lists) => {\n      if (self.justValue)\n        return {\n          browserResults: lists.addressSpaceItemList\n        }\n\n      return {\n        browseTopic: self.browseTopic,\n        browserResultsCount: lists.browserResults.length,\n        endpoint: self.connector?.endpoint,\n        session: (self.connector.iiot.opcuaSession) ? self.connector.iiot.opcuaSession.name : 'none'\n      }\n    }\n\n    const setMessageLists = (lists: Lists) => {\n      return {\n        nodesToRead: lists.nodesToRead.length ? lists.nodesToRead : lists.browserResults,\n        nodesToReadCount: lists.nodesToRead.length || lists.browserResults.length,\n        addressSpaceItemList: lists.addressSpaceItemList,\n        addressSpaceItemListCount: lists.addressSpaceItemList.length,\n        addressItemsToBrowse: lists.addressSpaceItemList,\n        addressItemsToBrowseCount: lists.addressSpaceItemList.length,\n      }\n    }\n\n    const browseSendResult = function (rootNodeId: NodeIdLike, depth: number, msg: NodeMessageInFlow, lists: Lists) {\n      coreBrowser.internalDebugLog(rootNodeId + ' called by depth ' + depth)\n      if (self.multipleOutputs) {\n        if (depth <= 0) {\n          sendMessage(rootNodeId, depth, msg, lists)\n          reset(lists)\n        }\n      } else {\n        sendMessage(rootNodeId, depth, msg, lists)\n        reset(lists)\n      }\n    }\n\n    const reset = (lists: Lists) => {\n      lists = createListsObject()\n    }\n\n    const browseWithAddressSpaceItems = function (msg: NodeMessageInFlow, depth: number, lists: Lists) {\n      const payload = msg.payload as BrowserInputPayloadLike\n\n      // Todo: a browse can overload addressSpaceItems, maybe this have to get more clear code and flow\n      // Yes, it should get addressSpaceItems to browse from and should send addressSpaceItems as the result from the browse later\n      // A good point could it be to use terms like addressSpaceItemsInput and addressSpaceItemsOutput\n\n      if (payload.addressItemsToBrowse && payload.addressItemsToBrowse.length > 0) {\n        payload.addressSpaceItems = payload.addressItemsToBrowse\n      }\n\n      if (payload.addressSpaceItems && payload.addressSpaceItems.length > 0) {\n        browseNodeList(payload.addressSpaceItems, msg, depth, lists, browseSendResult)\n      } else {\n        coreBrowser.detailDebugLog('Fallback NodeId On Browse Without AddressSpace Items')\n        self.browseTopic = self.nodeId || coreBrowser.browseToRoot()\n        browse(self.browseTopic, msg, depth, lists, browseSendResult)\n      }\n    }\n\n    const startBrowser = (msg: NodeMessageInFlow) => {\n      if (checkSessionNotValid(self.connector.iiot.opcuaSession, 'Browser')) {\n        this.status({fill: 'red', shape: 'ring', text: 'invalid connector session'})\n        return\n      }\n      let lists = createListsObject()\n      let depth = (self.recursiveBrowse) ? self.recursiveDepth : 0\n      self.browseTopic = coreBrowser.extractNodeIdFromTopic(msg.payload as BrowserInputPayloadLike, self) // set topic to the node object for HTTP requests at node\n      if (self.browseTopic && self.browseTopic !== '') {\n        browse(self.browseTopic, msg, depth, lists, browseSendResult)\n      } else {\n        browseWithAddressSpaceItems(msg, depth, lists)\n      }\n    }\n\n    this.on('input', (msg: NodeMessageInFlow) => {\n      if (!checkConnectorState(self, msg, 'Browser', errorHandler, emitHandler, statusHandler)) {\n        return\n      }\n      if (self.showStatusActivities) {\n        self.oldStatusParameter = setNodeStatusTo(self, 'browsing', self.oldStatusParameter, self.showStatusActivities, statusHandler)\n      }\n      startBrowser(msg)\n    })\n\n    const emitHandler = (msg: string) => {\n      this.emit(msg)\n    }\n\n    const errorHandler = (err: Error, msg: NodeMessage) => {\n      this.error(err, msg)\n    }\n\n    const statusHandler = (status: string | NodeStatus) => {\n      this.status(status)\n    }\n\n    const onAlias = (event: string, callback: () => void) => {\n      // @ts-ignore\n      this.on(event, callback)\n    }\n\n    registerToConnector(self, statusHandler, onAlias, errorHandler)\n\n    this.on('close', (done: () => void) => {\n      self.removeAllListeners()\n\n      deregisterToConnector(self, () => {\n        resetIiotNode(self)\n        done()\n      })\n    })\n  }\n\n\n  RED.nodes.registerType('OPCUA-IIoT-Browser', OPCUAIIoTBrowser)\n\n  RED.httpAdmin.get('/opcuaIIoT/browse/:id/:nodeId', RED.auth.needsPermission('opcuaIIoT.browse'), function (req, res) {\n    let node = RED.nodes.getNode(req.params.id) as BrowseNodeWithConfig\n    let entries: (Entry | ReferenceDescription)[] = []\n    let nodeRootId = decodeURIComponent(req.params.nodeId) || OBJECTS_ROOT\n    coreBrowser.detailDebugLog('request for ' + req.params.nodeId)\n\n    if (node.iiot?.opcuaSession) {\n      coreBrowser.browse(node.iiot.opcuaSession, nodeRootId).then((browserResult: BrowseResult[]) => {\n        browserResult.forEach((result: BrowseResult) => {\n          if (result.references && result.references.length) {\n            result.references.forEach((reference: ReferenceDescription) => {\n              entries.push(coreBrowser.transformToEntry(reference))\n            })\n          }\n        })\n        res.json(entries)\n      }).catch(function (err: Error) {\n        coreBrowser.internalDebugLog('Browser Error ' + err)\n        if (node.showErrors) {\n          node.error(err, {payload: 'Browse Internal Error'})\n        }\n\n        entries.push({\n          displayName: {text: 'Objects'}.toString(),\n          nodeId: OBJECTS_ROOT,\n          browseName: 'Objects'\n        })\n        res.json(entries)\n      })\n    } else {\n      res.json(entries)\n    }\n  })\n}\n"]}