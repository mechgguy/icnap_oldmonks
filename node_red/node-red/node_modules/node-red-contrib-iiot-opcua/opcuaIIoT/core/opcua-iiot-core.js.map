{"version":3,"sources":["../src/core/opcua-iiot-core.ts"],"names":[],"mappings":"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","file":"opcua-iiot-core.js","sourcesContent":["/**\n The BSD 3-Clause License\n\n Copyright 2022 - DATATRONiQ GmbH (https://datatroniq.com)\n Copyright (c) 2018-2022 Klaus Landsdorf (http://node-red.plus/)\n Copyright 2015,2016 - Mika Karaila, Valmet Automation Inc. (node-red-contrib-opcua)\n All rights reserved.\n node-red-contrib-iiot-opcua\n */\n'use strict'\n// SOURCE-MAP-REQUIRED\n\nimport {debug as Debug} from 'debug'\nimport * as os from 'os'\nimport * as underscore from 'underscore'\nimport _, {isObject} from 'underscore'\n\nimport * as nodeOPCUAId from 'node-opcua-nodeid'\nimport {NodeIdLike} from 'node-opcua-nodeid'\nimport {\n  AddressSpaceItem,\n  BrowseMessage,\n  DataTypeInput,\n  NodeIdentifier,\n  NodeToWrite,\n  TimeUnitNames,\n  TimeUnits,\n  WriteMessage\n} from \"../types/helpers\";\nimport {TodoTypeAny, TodoVoidFunction} from \"../types/placeholders\";\nimport {Node, NodeMessage, NodeStatus} from \"node-red\";\nimport {NodeMessageInFlow, NodeStatusFill, NodeStatusShape} from \"@node-red/registry\";\nimport {isNotDefined} from \"../types/assertion\";\nimport {\n  AttributeIds,\n  ClientSession,\n  DataType,\n  DataValue,\n  DataValueOptions,\n  NodeClass,\n  NodeId,\n  NodeIdType,\n  OPCUAClient, OPCUADiscoveryServer, UserIdentityInfo,\n} from \"node-opcua\";\nimport {WriteValueOptions} from \"node-opcua-service-write\";\nimport {VariantOptions} from \"node-opcua-variant\";\nimport {OPCUAClientOptions} from \"node-opcua-client/dist/opcua_client\";\n\nexport {Debug, os, underscore, nodeOPCUAId}\n\nexport type ConnectorIIoT = {\n  endpoints: string[],\n  opcuaClient?: OPCUAClient\n  opcuaSession?: ClientSession\n  discoveryServer?: OPCUADiscoveryServer\n  serverCertificate?: string\n  discoveryServerEndpointUrl?: string\n  hasOpcUaSubscriptions: boolean\n  userIdentity?: UserIdentityInfo\n  stateMachine?: TodoTypeAny\n  stateService?: TodoTypeAny\n  stateSubscription?: TodoTypeAny\n  opcuaClientOptions?: OPCUAClientOptions\n  registeredNodeList?: Record<string, Node>\n  functions?: Record<string, (...args: TodoTypeAny) => TodoTypeAny>\n  sessionNodeRequests: number\n}\n\nexport enum FsmConnectorStates {\n  StateIdle = 'idle',\n  StateInit = 'init',\n  StateOpened = 'opened',\n  StateSessionRequested = 'sessionRequested',\n  StateSessionActive = 'sessionActive',\n  StateSessionClosed = 'sessionClosed',\n  StateSessionRestart = 'sessionRestart',\n  StateClosed = 'closed',\n  StateLocked = 'locked',\n  StateUnlocked = 'unlocked',\n  StateStopped = 'stopped',\n  StateEnd = 'end',\n  StateReconfigured = 'reconfigured',\n  StateRenewed = 'renewed',\n}\n\nexport enum FsmListenerStates {\n  StateIdle = 'idle',\n  StateInit = 'init',\n  StateEnd = 'end',\n  StateRequested = 'requested',\n  StateStarted = 'started',\n  StateError = 'error',\n  StateTerminated = 'terminated'\n}\n\nexport const OBJECTS_ROOT: string = 'ns=0;i=84'\nexport const TEN_SECONDS_TIMEOUT: number = 10\nexport const RUNNING_STATE: FsmConnectorStates = FsmConnectorStates.StateSessionActive\nexport const isWindows: boolean = /^win/.test(os.platform())\nexport const FAKTOR_SEC_TO_MSEC: number = 1000\nexport const DEFAULT_TIMEOUT: number = 1000\n\nexport const regex_ns_i: RegExp = /ns=([0-9]+);i=([0-9]+)/\nexport const regex_ns_s: RegExp = /ns=([0-9]+);s=(.*)/\nexport const regex_ns_b: RegExp = /ns=([0-9]+);b=(.*)/\nexport const regex_ns_g: RegExp = /ns=([0-9]+);g=(.*)/\n\nnamespace logger {\n  export const internalDebugLog = Debug('opcuaIIoT:core')\n  export const detailDebugLog = Debug('opcuaIIoT:core:details')\n  export const specialDebugLog = Debug('opcuaIIoT:core:special')\n}\n\nlogger.internalDebugLog(os.endianness())\nlogger.internalDebugLog(os.hostname())\nlogger.internalDebugLog(os.platform())\nlogger.internalDebugLog(os.type())\nlogger.internalDebugLog(os.arch())\n\nexport const getPathFromRequireResolve = (requireResolve: string): string => {\n  let pathToNodeOPCUA = ''\n\n  if (isWindows) {\n    pathToNodeOPCUA = requireResolve.replace('\\\\index.js', '')\n  } else {\n    pathToNodeOPCUA = requireResolve.replace('/index.js', '')\n  }\n\n  logger.internalDebugLog('path to node-opcua: ' + pathToNodeOPCUA)\n\n  return pathToNodeOPCUA\n}\n\nexport function getNodeOPCUAPath(): string {\n  return getPathFromRequireResolve(require.resolve('node-opcua'))\n}\n\nexport function getNodeOPCUAClientPath(): string {\n  return getPathFromRequireResolve(require.resolve('node-opcua-client'))\n}\n\nexport function getNodeOPCUAServerPath(): string {\n  return getPathFromRequireResolve(require.resolve('node-opcua-server'))\n}\n\nexport function getTimeUnitName(unit: TimeUnits): TimeUnitNames {\n  switch (unit) {\n    case 'ms':\n      return 'msec.'\n    case 's':\n      return 'sec.'\n    case 'm':\n      return 'min.'\n    case 'h':\n      return 'h.'\n    default:\n      return ''\n  }\n}\n\nexport function calcMillisecondsByTimeAndUnit(time: number, unit: TimeUnits): number {\n  switch (unit) {\n    case 'ms':\n      return time\n    case 's':\n      return time * 1000 // seconds\n    case 'm':\n      return time * 60000 // minutes\n    case 'h':\n      return time * 3600000 // hours\n    default:\n      return 10000 // 10 sec.\n  }\n}\n\nexport function getNodeStatus(statusValue: string, statusLog: boolean): NodeStatus {\n  let fillValue: NodeStatusFill = 'yellow'\n  let shapeValue: NodeStatusShape = 'ring'\n\n  switch (statusValue) {\n    case 'initialize':\n    case 'connecting':\n      fillValue = 'yellow'\n      break\n    case 'connected':\n    case 'keepalive':\n    case 'subscribe':\n    case 'started':\n      if (!statusLog) {\n        statusValue = 'active'\n        shapeValue = 'dot'\n      }\n      fillValue = 'green'\n      break\n    case 'active':\n    case 'subscribed':\n    case 'listening':\n      fillValue = 'green'\n      shapeValue = 'dot'\n      break\n    case 'disconnected':\n    case 'terminated':\n      fillValue = 'red'\n      break\n    case 'waiting':\n      fillValue = 'blue'\n      shapeValue = 'dot'\n      statusValue = 'waiting ...'\n      break\n    case 'error':\n      fillValue = 'red'\n      shapeValue = 'dot'\n      break\n    default:\n      if (!statusValue) {\n        fillValue = 'blue'\n        statusValue = 'waiting ...'\n      }\n  }\n  return {fill: fillValue, shape: shapeValue, text: statusValue}\n}\n\nfunction extractValue(value: any) {\n\n  logger.detailDebugLog('extractValue value:' + value)\n  if (_.isUndefined(value.value) === false) {\n    return value.value // value could be null, 0, and any other, but not undefined\n  }\n\n  return value\n}\n\nexport function buildNewVariant(datatype: DataTypeInput, value: any): DataValueOptions {\n  let variantValue: VariantOptions = {\n    dataType: DataType.Null,\n    value: null\n  }\n\n  let originValue = Object.assign({}, value)\n  value = extractValue(value);\n\n  logger.detailDebugLog('buildNewVariant datatype: ' + datatype + ' originValue:' + originValue + ' value:' + value)\n  switch (datatype) {\n    case 'Float':\n    case DataType.Float:\n      variantValue = {\n        dataType: DataType.Float,\n        value: parseFloat(value)\n      }\n      break\n    case 'Double':\n    case DataType.Double:\n      variantValue = {\n        dataType: DataType.Double,\n        value: parseFloat(value)\n      }\n      break\n    case 'UInt16':\n    case DataType.UInt16:\n      let uint16 = new Uint16Array([value])\n      variantValue = {\n        dataType: DataType.UInt16,\n        value: uint16[0]\n      }\n      break\n    case 'UInt32':\n    case DataType.UInt32:\n      let uint32 = new Uint32Array([value])\n      variantValue = {\n        dataType: DataType.UInt32,\n        value: uint32[0]\n      }\n      break\n    case 'Int32':\n    case DataType.Int32:\n      variantValue = {\n        dataType: DataType.Int32,\n        value: parseInt(value)\n      }\n      break\n    case 'Int16':\n    case DataType.Int16:\n      variantValue = {\n        dataType: DataType.Int16,\n        value: parseInt(value)\n      }\n      break\n    case 'Int64':\n    case DataType.Int64:\n      variantValue = {\n        dataType: DataType.Int64,\n        value: parseInt(value)\n      }\n      break\n    case 'Boolean':\n    case DataType.Boolean:\n      if (value && value !== 'false') {\n        variantValue = {\n          dataType: DataType.Boolean,\n          value: true\n        }\n      } else {\n        variantValue = {\n          dataType: DataType.Boolean,\n          value: false\n        }\n      }\n      break\n    case 'LocalizedText':\n    case DataType.LocalizedText:\n      variantValue = {\n        dataType: DataType.LocalizedText,\n        value: JSON.parse(value) /* [{text:'Hello', locale:'en'}, {text:'Hallo', locale:'de'} ... ] */\n      }\n      break\n    case 'DateTime':\n    case DataType.DateTime:\n      variantValue = {\n        dataType: DataType.DateTime,\n        value: new Date(value)\n      }\n      break\n    default:\n      if (datatype !== '') {\n        const datatypeList = getBasicDataTypes()\n        datatypeList.forEach((item) => {\n          if (item.name === datatype || item.dataType === datatype) {\n            variantValue = {\n              dataType: item.dataType,\n              value: value\n            }\n          }\n        })\n      } else {\n        variantValue = {\n          dataType: DataType.String,\n          value: value\n        }\n      }\n      break\n  }\n\n  logger.detailDebugLog('buildNewVariant variantValue: ' + JSON.stringify(variantValue))\n\n  return {\n    value: variantValue\n  }\n}\n\nexport function getVariantValue(datatype: DataTypeInput, value: any): number | Date | boolean | string {\n  switch (datatype) {\n    case 'Float':\n    case 'Double':\n    case DataType.Double:\n      return parseFloat(value)\n    case 'UInt16':\n    case DataType.UInt16:\n      let uint16 = new Uint16Array([value])\n      return uint16[0]\n    case 'UInt32':\n    case DataType.UInt32:\n      let uint32 = new Uint32Array([value])\n      return uint32[0]\n    case 'UInt64':\n    case DataType.UInt64:\n      return parseInt(value)\n    case 'Int16':\n    case DataType.Int16:\n    case 'Int32':\n    case 'Integer':\n    case DataType.Int32:\n    case 'Int64':\n    case DataType.Int64:\n      return parseInt(value)\n    case 'Boolean':\n    case DataType.Boolean:\n      return (value && value !== 'false')\n    case 'DateTime':\n    case DataType.DateTime:\n      return new Date(value)\n    case 'String':\n    case DataType.String:\n      return (typeof value !== 'string') ? value.toString() : value\n    default:\n      return value\n  }\n}\n\nexport function getBasicDataTypes() {\n  return [\n    {name: 'Null', dataType: DataType.Null},\n    {name: 'Boolean', dataType: DataType.Boolean},\n    {name: 'SByte', dataType: DataType.SByte},\n    {name: 'Byte', dataType: DataType.Byte},\n    {name: 'Int16', dataType: DataType.Int16},\n    {name: 'UInt16', dataType: DataType.UInt16},\n    {name: 'Int32', dataType: DataType.Int32},\n    {name: 'UInt32', dataType: DataType.UInt32},\n    {name: 'Int64', dataType: DataType.Int64},\n    {name: 'UInt64', dataType: DataType.UInt64},\n    {name: 'Float', dataType: DataType.Float},\n    {name: 'Double', dataType: DataType.Double},\n    {name: 'DateTime', dataType: DataType.DateTime},\n    {name: 'String', dataType: DataType.String},\n    {name: 'Guid', dataType: DataType.Guid},\n    {name: 'ByteString', dataType: DataType.ByteString},\n    {name: 'XmlElement', dataType: DataType.XmlElement},\n    {name: 'NodeId', dataType: DataType.NodeId},\n    {name: 'ExpandedNodeId', dataType: DataType.ExpandedNodeId},\n    {name: 'StatusCode', dataType: DataType.StatusCode},\n    {name: 'LocalizedText', dataType: DataType.LocalizedText},\n    {name: 'ExtensionObject', dataType: DataType.ExtensionObject},\n    {name: 'DataValue', dataType: DataType.DataValue},\n    {name: 'Variant', dataType: DataType.Variant},\n    {name: 'DiagnosticInfo', dataType: DataType.DiagnosticInfo}\n  ]\n}\n\nexport function valueIsString(value: DataValue | string): value is string {\n  return typeof value === 'string'\n}\n\nexport function convertDataValue(value: DataValue | string) {\n  if (valueIsString(value)) {\n    return value;\n  } else\n    return convertDataValueByDataType(value.value.value, value.value.dataType)\n}\n\nexport function convertDataValueByDataType(value: any, dataType: DataTypeInput): string {\n  let convertedValue = null\n\n  const valueType = typeof value\n\n  logger.detailDebugLog('convertDataValue: ' + JSON.stringify(value) +\n    ' value origin type ' + valueType + ' convert to' + ' ' + dataType)\n\n  // TODO: we have to check if that is needed or to improve since v2.x - here was a problem, that the node-opcua sent strings or types\n  try {\n    switch (dataType) {\n      case 'NodeId':\n      case DataType.NodeId:\n        convertedValue = value.toString()\n        break\n      case 'ExpandedNodeId':\n      case DataType.ExpandedNodeId:\n        if (value.value instanceof Buffer) {\n          convertedValue = value.toString()\n        } else {\n          convertedValue = value\n        }\n        break\n      case 'ByteString':\n      case DataType.ByteString:\n        convertedValue = value\n        break\n      case 'Byte':\n      case DataType.Byte:\n        if (valueType === 'boolean') {\n          convertedValue = value ? 1 : 0\n        } else {\n          convertedValue = parseInt(value)\n        }\n        break\n      case 'QualifiedName':\n      case DataType.QualifiedName:\n        convertedValue = value.toString()\n        break\n      case 'LocalizedText':\n      case DataType.LocalizedText:\n        convertedValue = value\n        break\n      case 'Float':\n      case DataType.Float:\n        if (isNaN(value)) {\n          convertedValue = value\n        } else {\n          convertedValue = parseFloat(value)\n        }\n        break\n      case 'Double':\n      case DataType.Double:\n        if (isNaN(value)) {\n          convertedValue = value\n        } else {\n          convertedValue = parseFloat(value)\n        }\n        break\n      case 'UInt16':\n      case DataType.UInt16:\n        let uint16 = new Uint16Array([value])\n        convertedValue = uint16[0]\n        break\n      case 'UInt32':\n      case DataType.UInt32:\n        let uint32 = new Uint32Array([value])\n        convertedValue = uint32[0]\n        break\n      case 'Int16':\n      case DataType.Int16:\n      case 'Int32':\n      case DataType.Int32:\n      case 'Int64':\n      case DataType.Int64:\n        if (valueType === 'boolean') {\n          convertedValue = value ? 1 : 0\n        } else {\n          if (isNaN(value)) {\n            convertedValue = value\n          } else {\n            convertedValue = parseInt(value)\n          }\n        }\n        break\n      case 'Boolean':\n      case DataType.Boolean:\n        convertedValue = value\n        break\n      case 'String':\n      case DataType.String:\n        if (valueType !== 'string') {\n          convertedValue = value.toString()\n        } else {\n          convertedValue = value\n        }\n        break\n      case 'Null':\n      case DataType.Null:\n        convertedValue = null\n        break\n      case \"DateTime\":\n      case DataType.DateTime:\n        if (valueType !== 'string') {\n          convertedValue = value.toString()\n        } else {\n          convertedValue = value\n        }\n        break;\n      default:\n        logger.internalDebugLog('convertDataValue unused DataType: ' + dataType)\n        if(_.isUndefined(value)) {\n          convertedValue = null\n        } else {\n          convertedValue = value\n        }\n        break\n    }\n  } catch (err) {\n    logger.detailDebugLog('convertDataValue ' + err)\n  }\n\n  logger.detailDebugLog('convertDataValue is: ' + convertedValue)\n\n  return convertedValue\n}\n\nexport function parseNamespaceFromMsgTopic(msg: BrowseMessage | null): number | undefined {\n  let nodeNamespace = ''\n\n  if (msg?.topic) {\n    // TODO: real parsing instead of string operations\n    // TODO: which type are relevant here? (String, Integer ...)\n    nodeNamespace = msg.topic.substring(3, msg.topic.indexOf(';'))\n  }\n\n  return Number.parseInt(nodeNamespace)\n}\n\nexport function parseNamespaceFromItemNodeId(item: NodeIdLike): number | undefined {\n  if (typeof item === 'number') {\n    return 0;\n  }\n\n  if(isObject(item) && item.namespace) {\n    return item.namespace\n  }\n\n  // TODO: real parsing instead of string operations\n  const nodeObject = JSON.parse(JSON.stringify(item))\n  return Number.parseInt(nodeObject.nodeId.substring(3, nodeObject.nodeId.indexOf(';')))\n}\n\nexport function parseForNodeIdentifier(nodeItem: string): NodeIdentifier {\n  if (nodeItem) {\n    // TODO: real parsing instead of string operations\n    if (nodeItem.includes(';i=')) {\n      return {\n        identifier: parseInt(nodeItem.substring(nodeItem.indexOf(';i=') + 3)),\n        type: NodeIdType.NUMERIC\n      }\n    } else if (nodeItem.includes(';g=')) {\n      return {\n        identifier: nodeItem.substring(nodeItem.indexOf(';g=') + 3),\n        type: NodeIdType.GUID\n      }\n    } else {\n      if (nodeItem.includes(';b=')) {\n        return {\n          identifier: nodeItem.substring(nodeItem.indexOf(';b=') + 3),\n          type: NodeIdType.BYTESTRING\n        }\n      } else {\n        return {\n          identifier: nodeItem.substring(nodeItem.indexOf(';s=') + 3),\n          type: NodeIdType.STRING\n        }\n      }\n    }\n  }\n  return {\n    identifier: 'null',\n    type: 0x00\n  }\n}\n\nexport function parseIdentifierFromMsgTopic(msg: BrowseMessage): NodeIdentifier {\n  return parseForNodeIdentifier(msg.topic)\n}\n\nexport function parseIdentifierFromItemNodeId(item: NodeIdLike): NodeIdentifier {\n  return parseForNodeIdentifier((item as TodoTypeAny).nodeId || item)\n}\n\nexport function newOPCUANodeIdFromItemNodeId(item: NodeIdLike): NodeId {\n  let namespace = parseNamespaceFromItemNodeId(item)\n  let nodeIdentifier = parseIdentifierFromItemNodeId(item)\n\n  logger.internalDebugLog('newOPCUANodeIdFromItemNodeId: ' + JSON.stringify(item) + ' -> ' + JSON.stringify(nodeIdentifier) + ' namespace:' + namespace)\n  return new NodeId(nodeIdentifier.type, nodeIdentifier.identifier, namespace)\n}\n\nexport function newOPCUANodeIdFromMsgTopic(msg: BrowseMessage): NodeId {\n  let namespace = parseNamespaceFromMsgTopic(msg)\n  let nodeIdentifier = parseIdentifierFromMsgTopic(msg)\n\n  logger.internalDebugLog('newOPCUANodeIdFromMsgTopic: ' + JSON.stringify(nodeIdentifier))\n  return new NodeId(nodeIdentifier.type, nodeIdentifier.identifier, namespace)\n}\n\nexport function createItemForWriteList(item: NodeIdLike, value: DataValueOptions): WriteValueOptions {\n  return {\n    nodeId: newOPCUANodeIdFromItemNodeId(item),\n    attributeId: AttributeIds.Value,\n    indexRange: undefined,\n    value\n  }\n}\n\nexport function normalizeMessage(msg: WriteMessage) {\n  const payload = msg.payload as TodoTypeAny\n  const addressSpaceValues: NodeToWrite[] = payload.nodesToWrite || payload.addressSpaceItems;\n\n  if (!addressSpaceValues) return [];\n\n  const writeValues = payload.valuesToWrite;\n\n  if (!isNotDefined(writeValues)) {\n    return addressSpaceValues.map((item, index) => {\n      return {...item, value: _.isUndefined(writeValues[index]) ? null : writeValues[index]}\n    })\n  } else\n    return addressSpaceValues.map((item, index) => {\n      if (item.value) return item;\n      else return {\n        ...item,\n        value: (Array.isArray(msg.payload) && msg.payload.length && msg.payload.length === msg.addressSpaceItems.length) ? msg.payload[index] : msg.payload\n      }\n\n    })\n\n}\n\nexport function buildNodesToWrite(msg: WriteMessage): WriteValueOptions[] {\n\n  logger.detailDebugLog('buildNodesToWrite input: ' + JSON.stringify(msg))\n  const writeInputs = normalizeMessage(msg)\n\n\n  const nodesToWrite = writeInputs.map((item: TodoTypeAny) =>\n    createItemForWriteList(item, buildNewVariant(item.datatypeName, item.value)\n  ));\n\n  logger.internalDebugLog('buildNodesToWrite output: ' + JSON.stringify(nodesToWrite))\n\n  return nodesToWrite\n}\n\nexport function buildNodesToRead(payload: TodoTypeAny) {\n  logger.detailDebugLog('buildNodesToRead input: ' + JSON.stringify(payload))\n\n  let injectArrayOfNodeIds = (payload.value?.length && payload.value.type === Array) ? payload.value : payload.addressSpaceItems;\n  /*\n    there are some possible ways to receive the Array<any> from Browser or Inject\n\n    TODO: payload.injectType and/or payload.nodetype should be used to make a clear decision here\n\n    read : nodesToRead\n    write : nodesToWrite\n    browse : browserResults\n    crawl : crawlerResults\n    value : inject with Array<any>\n    addressSpaceItems : inject fall back for all types\n\n  */\n\n  let nodePayloadList:Array<AddressSpaceItem> = payload.nodesToRead || payload.nodesToWrite || payload.crawlerResults || payload.browserResults || injectArrayOfNodeIds;\n\n  if (nodePayloadList && nodePayloadList.length) {\n    return nodePayloadList.map((item: AddressSpaceItem) => {\n      return item\n    })\n  } else {\n    let nodeList:Array<AddressSpaceItem> = payload.nodesToRead || payload.nodesToWrite\n    if (nodeList && nodeList.length) {\n      // legacy\n      return nodeList.map((item: AddressSpaceItem) => {\n        return item\n      })\n    } else if (payload.addressSpaceItems && payload.addressSpaceItems.length) {\n      return payload.addressSpaceItems.map((item: AddressSpaceItem) => item)\n    }\n  }\n  return []\n}\n\nexport function buildNodesToListen(payload: TodoTypeAny) {\n  if (payload.addressItemsToRead?.length)\n    return payload.addressItemsToRead\n  else if (payload.addressSpaceItems?.length)\n    return payload.addressSpaceItems\n  else\n    return payload.addressSpaceItemList\n}\n\nexport function buildNodesFromBrowser(payload: TodoTypeAny) {\n  return payload.browserResults || payload.addressSpaceItems\n}\n\nexport function buildNodesFromCrawler(payload: TodoTypeAny) {\n  return payload.crawlerResults || payload.addressSpaceItems\n}\n\nexport function buildNodeListFromClient(payload: TodoTypeAny) {\n  /*\n    The node type should help users to be aware of wiring mistakes.\n    We want to support the user with messages if the wiring and inputs are wrong.\n    That brings the needs of a nodeType (where does it come from) and injectType (where should it be for).\n    This was the real last feature and needs some more refactoring and work to be done well.\n   */\n  switch (payload.nodetype) {\n    case 'read':\n    case 'write':\n      return buildNodesToRead(payload)\n    case 'node':\n    case 'listen':\n    case 'inject':\n    case 'events':\n      return buildNodesToListen(payload)\n    case 'browse':\n      return buildNodesFromBrowser(payload)\n    case 'crawl':\n      return buildNodesFromCrawler(payload)\n    default:\n      logger.internalDebugLog('unknown node type injected to filter for ' + payload.nodetype)\n      return []\n  }\n}\n\nexport function availableMemory() {\n  return os.freemem() / os.totalmem() * 100.0\n}\n\nexport function isSessionBad(err: Error) {\n  return (err.toString().includes('Session') ||\n    err.toString().includes('Channel') ||\n    err.toString().includes('Transaction') ||\n    err.toString().includes('timeout') ||\n    err.toString().includes('Connection'))\n}\n\nexport function setNodeInitalState(nodeState: string, node: TodoTypeAny, statusCall: (status: string | NodeStatus) => void) {\n  switch (nodeState) {\n    case 'INITOPCUA':\n    case 'SESSIONREQUESTED':\n      node.oldStatusParameter = setNodeStatusTo(node, 'connecting', node.oldStatusParameter, node.showStatusActivities, statusCall)\n      break\n    case 'OPEN':\n    case 'SESSIONCLOSED':\n      node.iiot.opcuaClient = node.connector.iiot.opcuaClient\n      node.oldStatusParameter = setNodeStatusTo(node, 'connected', node.oldStatusParameter, node.showStatusActivities, statusCall)\n      break\n    case 'SESSIONACTIVE':\n      node.iiot.opcuaSession = node.connector.iiot.opcuaSession\n      node.oldStatusParameter = setNodeStatusTo(node, 'active', node.oldStatusParameter, node.showStatusActivities, statusCall)\n      break\n    case 'LOCKED':\n      node.oldStatusParameter = setNodeStatusTo(node, 'locked', node.oldStatusParameter, node.showStatusActivities, statusCall)\n      break\n    case 'UNLOCKED':\n      node.oldStatusParameter = setNodeStatusTo(node, 'unlocked', node.oldStatusParameter, node.showStatusActivities, statusCall)\n      break\n    case 'STOPPED':\n      node.oldStatusParameter = setNodeStatusTo(node, 'stopped', node.oldStatusParameter, node.showStatusActivities, statusCall)\n      break\n    case 'END':\n      node.oldStatusParameter = setNodeStatusTo(node, 'end', node.oldStatusParameter, node.showStatusActivities, statusCall)\n      break\n    default:\n      node.oldStatusParameter = setNodeStatusTo(node, 'waiting', node.oldStatusParameter, node.showStatusActivities, statusCall)\n  }\n}\n\nexport function isNodeId(nodeId: NodeId) {\n  if (!nodeId || !nodeId.identifierType) {\n    return false\n  }\n\n  switch (nodeId.identifierType) {\n    case NodeIdType.NUMERIC:\n    case NodeIdType.STRING:\n    case NodeIdType.GUID:\n      return true\n    default:\n      return false\n  }\n}\n\nexport function checkConnectorState(\n  node: TodoTypeAny,\n  msg: NodeMessageInFlow,\n  callerType: string,\n  errorHandler: (err: Error, msg: NodeMessageInFlow) => void,\n  emitHandler: (msg: string) => void,\n  statusHandler: (status: string | NodeStatus) => void\n): boolean {\n  const state = node.connector?.iiot.stateService?.state.value\n  logger.internalDebugLog('Check Connector State ' + state + ' By ' + callerType)\n  if (state !== RUNNING_STATE) {\n    logger.internalDebugLog('Wrong Client State ' + state + ' By ' + callerType)\n    if (node.showErrors) {\n      errorHandler(new Error('Client Not ' + RUNNING_STATE + ' On ' + callerType), msg)\n    }\n    node.oldStatusParameter = setNodeStatusTo(node as Node, 'not running', node.oldStatusParameter, node.showStatusActivities, statusHandler)\n    emitHandler('opcua_client_not_ready')\n    return false\n  } else {\n    return true\n  }\n}\n\nexport function setNodeOPCUAConnected(node: TodoTypeAny, opcuaClient: OPCUAClient, statusHandler: (status: string | NodeStatus) => void): void {\n  if (isInitializedIIoTNode(node)) {\n    node.iiot.opcuaClient = opcuaClient\n  }\n  node.oldStatusParameter = setNodeStatusTo(node as unknown as Node, 'connecting', node.oldStatusParameter, node.showStatusActivities, statusHandler)\n}\n\nexport function setNodeOPCUAClosed(node: TodoTypeAny, statusHandler: (status: string | NodeStatus) => void): void {\n  if (isInitializedIIoTNode(node)) {\n    // @ts-ignore\n    node.iiot.opcuaClient = null\n  }\n  node.oldStatusParameter = setNodeStatusTo(node as unknown as Node, 'disconnected', node.oldStatusParameter, node.showStatusActivities, statusHandler)\n}\n\nexport function setNodeOPCUALost(node: TodoTypeAny, statusHandler: (status: string | NodeStatus) => void): void {\n  node.oldStatusParameter = setNodeStatusTo(node as unknown as Node, 'lost', node.oldStatusParameter, node.showStatusActivities, statusHandler)\n}\n\nexport function setNodeOPCUASessionStarted(node: TodoTypeAny, opcuaSession: ClientSession, statusHandler: (status: string | NodeStatus) => void): void {\n  if (isInitializedIIoTNode(node)) {\n    node.iiot.opcuaSession = opcuaSession\n  }\n  node.oldStatusParameter = setNodeStatusTo(node as unknown as Node, 'active', node.oldStatusParameter, node.showStatusActivities, statusHandler)\n}\n\nexport function setNodeOPCUASessionClosed(node: TodoTypeAny, statusHandler: (status: string | NodeStatus) => void): void {\n  if (isInitializedIIoTNode(node)) {\n    node.iiot.opcuaSession = null\n  }\n  node.oldStatusParameter = setNodeStatusTo(node as unknown as Node, 'connecting', node.oldStatusParameter, node.showStatusActivities, statusHandler)\n}\n\nexport function setNodeOPCUASessionRestart(node: TodoTypeAny, statusHandler: (status: string | NodeStatus) => void): void {\n  node.oldStatusParameter = setNodeStatusTo(node as unknown as Node, 'restart', node.oldStatusParameter, node.showStatusActivities, statusHandler)\n}\n\nexport function setNodeOPCUASessionError(node: TodoTypeAny, statusHandler: (status: string | NodeStatus) => void): void {\n  if (isInitializedIIoTNode(node)) {\n    node.iiot.opcuaSession = null\n  }\n  node.oldStatusParameter = setNodeStatusTo(node as unknown as Node, 'connecting', node.oldStatusParameter, node.showStatusActivities, statusHandler)\n}\n\nexport function setNodeOPCUARestart(node: TodoTypeAny, opcuaClient: OPCUAClient, statusHandler: (status: string | NodeStatus) => void): void {\n  logger.internalDebugLog('Connector Restart')\n  if (opcuaClient && isInitializedIIoTNode(node)) {\n    node.iiot.opcuaClient = opcuaClient\n  }\n  node.oldStatusParameter = setNodeStatusTo(node as unknown as Node, 'connecting', node.oldStatusParameter, node.showStatusActivities, statusHandler)\n}\n\ntype NodeWithConnector = Node & {\n  connector: ConnectorIIoT\n}\n\nexport function registerToConnector(node: TodoTypeAny, statusCallback: (status: string | NodeStatus) => void, onAlias: (event: string, callback: () => void) => void, errorHandler: (err: Error, msg: NodeMessage) => void): void {\n  if (!node) {\n    logger.internalDebugLog('Node Not Valid On Register To Connector')\n    return\n  }\n\n  if (isNotDefined(node.connector)) {\n    errorHandler(new Error('Connector Config Node Not Valid On Registering Client Node ' + (node as unknown as Node).id), {payload: 'No Connector Configured'})\n    return\n  }\n  if (!node.connector.statusCallbacks) {\n    node.connector.statusCallbacks = []\n  }\n  node.connector.statusCallbacks.push(statusCallback)\n  node.connector.functions?.registerForOPCUA(node, onAlias)\n\n  const statusCall = (status: string | NodeStatus): void => {\n    node.connector.statusCallbacks.forEach((callback: TodoVoidFunction) => callback(status))\n  }\n\n  node.connector.on('connector_init', (node: TodoTypeAny) => {\n    if (node.iiot?.opcuaClient) {\n      // @ts-ignore\n      node.iiot.opcuaClient = null\n    }\n\n    if (node.iiot?.opcuaSession) {\n      node.iiot.opcuaSession = null\n    }\n  })\n\n  node.connector.on('connection_started', (opcuaClient: OPCUAClient) => {\n    setNodeOPCUAConnected(node.connector, opcuaClient, statusCall)\n  })\n\n  node.connector.on('server_connection_close', () => {\n    setNodeOPCUAClosed(node.connector, statusCall)\n  })\n\n  node.connector.on('server_connection_abort', () => {\n    setNodeOPCUAClosed(node.connector, statusCall)\n  })\n\n  node.connector.on('connection_closed', () => {\n    setNodeOPCUAClosed(node.connector, statusCall)\n  })\n\n  node.connector.on('server_connection_lost', () => {\n    setNodeOPCUALost(node.connector, statusCall)\n  })\n\n  node.connector.on('reset_opcua_connection', () => {\n    setNodeOPCUASessionClosed(node.connector, statusCall)\n  })\n\n  node.connector.on('session_started', (opcuaSession: ClientSession) => {\n    setNodeOPCUASessionStarted(node.connector, opcuaSession, statusCall)\n  })\n\n  node.connector.on('session_closed', () => {\n    setNodeOPCUASessionClosed(node.connector, statusCall)\n  })\n\n  node.connector.on('session_restart', () => {\n    setNodeOPCUAClosed(node.connector, statusCall)\n  })\n\n  node.connector.on('session_error', () => {\n    setNodeOPCUASessionError(node.connector, statusCall)\n  })\n\n  node.connector.on('after_reconnection', () => {\n    setNodeOPCUARestart(node.connector, OPCUAClient.create((node.connector as TodoTypeAny).iiot.opcuaClient), statusCall) // TODO: investigate one args v two\n  })\n  setNodeInitalState(node.connector?.iiot?.stateService.state.value, node, statusCall)\n}\n\nexport function deregisterToConnector(node: NodeWithConnector, done: () => void) {\n  if (!node) {\n    logger.internalDebugLog('Node Not Valid On Register To Connector')\n    done()\n    return\n  }\n\n  if (!node.connector) {\n    node.error(new Error('Connector Not Valid On Register To Connector'), {payload: 'No Connector Configured'})\n    done()\n    return\n  }\n\n  if (isInitializedIIoTNode(node.connector)) {\n    node.connector?.functions?.deregisterForOPCUA(node, done)\n  } else {\n    done()\n  }\n}\n\nexport function checkSessionNotValid(session: TodoTypeAny, callerType: TodoTypeAny) {\n  if (!session) {\n    logger.internalDebugLog('Session Not Valid On Check For ' + callerType)\n    return true\n  }\n\n  if (session.sessionId === 'terminated') {\n    logger.internalDebugLog('Session Is Valid But Terminated On Check For ' + callerType)\n    return true\n  }\n\n  return false\n}\n\nexport function setNodeStatusTo(\n  node: Node,\n  statusValue: string,\n  oldStatus: NodeStatus,\n  showStatusActivities: boolean,\n  status: (status: string | NodeStatus) => void\n): NodeStatus {\n  let statusParameter: NodeStatus = getNodeStatus(statusValue, showStatusActivities)\n  if (!underscore.isEqual(oldStatus, statusParameter) && statusParameter) {\n    logger.detailDebugLog('Node ' + node.id + ' Status To ' + statusValue)\n    if (typeof status === \"function\")\n      status(statusParameter)\n    else\n      logger.internalDebugLog(\"Status is not a function \" + typeof status)\n  }\n  return statusParameter\n}\n\n// sets some values within node.iiot\nexport function initCoreNode() {\n  return {\n    reconnectTimeout: DEFAULT_TIMEOUT,\n    sessionTimeout: undefined,\n    opcuaSession: undefined,\n    opcuaClient: undefined\n  }\n}\n\nexport function initCoreServerNode() {\n  return {\n    initialized: false,\n    opcuaServer: null\n  }\n}\n\nexport function getItemFilterValueWithElement(item: TodoTypeAny, element: TodoTypeAny): string | Record<string, any> {\n  let filterValue = ''\n\n  switch (element.name) {\n    case 'browseName':\n    case 'statusCode':\n      filterValue = item[element.name].name\n      break\n    case 'displayName':\n      filterValue = item[element.name].text\n      break\n    case 'value':\n    case 'dataType':\n      if (item.value && item.value.hasOwnProperty('value')) {\n        filterValue = item.value[element.name]\n      } else {\n        filterValue = item[element.name]\n      }\n      break\n    case 'nodeClass':\n      filterValue = NodeClass[item['nodeClass']]\n      break\n    default:\n      filterValue = item[element.name]\n  }\n\n  return filterValue\n}\n\nexport function handleErrorInsideNode(node: TodoTypeAny, err: Error) {\n  logger.internalDebugLog(typeof node + ' ' + err.message)\n  if (node.showErrors) {\n    node.error(err, {payload: err.message})\n  }\n}\n\nexport function checkCrawlerItemIsNotToFilter(node: TodoTypeAny, item: TodoTypeAny, element: TodoTypeAny, result: TodoTypeAny): number {\n  try {\n    let filterValue = getItemFilterValueWithElement(item, element)\n\n\n\n    if (filterValue && typeof filterValue !== \"string\" && filterValue.key && filterValue.key.match) {\n      if (!filterValue.key.match(element.value)) {\n        result = 0\n      }\n    } else {\n      if (filterValue && filterValue.match) {\n        if (!filterValue.match(element.value)) {\n          result = 0\n        }\n      } else {\n        if (filterValue && filterValue.toString) {\n          filterValue = filterValue.toString()\n          if (filterValue && filterValue.match) {\n            if (!filterValue.match(element.value)) {\n              result = 0\n            }\n          }\n        }\n      }\n    }\n  } catch (err: any) {\n    handleErrorInsideNode(node, err)\n  }\n\n  return result\n}\n\nexport function checkResponseItemIsNotToFilter(node: Node, item: TodoTypeAny, element: TodoTypeAny, result: TodoTypeAny) {\n  try {\n    let filterValue = getItemFilterValueWithElement(item, element)\n\n    if (filterValue) {\n      if (typeof filterValue !== 'string' && filterValue.key && filterValue.key.match) {\n        result &= filterValue.key.match(element.value) !== null ? 1 : 0\n      } else {\n        if (filterValue.match) {\n          result &= filterValue.match(element.value) !== null ? 1 : 0\n        } else {\n          if (filterValue.toString) {\n            filterValue = filterValue.toString()\n            if (filterValue.match) {\n              result &= filterValue.match(element.value) !== null ? 1 : 0\n            }\n          }\n        }\n      }\n    } else {\n      result &= 0 // undefined items\n    }\n  } catch (err: any) {\n    handleErrorInsideNode(node, err)\n  }\n\n  return result\n}\n\nexport function checkItemForUnsetState(node: TodoTypeAny, item: TodoTypeAny): number {\n  let result = 1\n\n  if (node.activateUnsetFilter) {\n    result &= item !== null ? 1 : 0\n\n    if (item && item.hasOwnProperty('value')) {\n      if (item.value && item.value.hasOwnProperty('value')) {\n        result &= item.value.value !== null ? 1 : 0\n      } else {\n        result &= item.value !== null ? 1 : 0\n      }\n    }\n  }\n\n  return result\n}\n\nexport function resetIiotNode(node: TodoTypeAny) {\n  // coreListener.internalDebugLog('reset IIoT of the Node with id:' + node.id)   /// Invalid import of lower hirarchy module\n  // Valid hirarchy is supposed to be: Core -> CoreSpecific (CoreListener, CoreConnector, ...) -> Specific (Listener, Browser, ...)\n  // This is because looped imports and usages before declaration can happen if this is not kept in mind\n\n  if(_.isObject(node) == false || _.isEmpty(node.iiot)) {\n    return\n  } else {\n    if(_.isFunction(node.resetAllTimer)) {\n      node.resetAllTimer() // call to close all timer otherwise it stops until timeout and node-red hangs on\n    }\n  }\n\n  if (isInitializedIIoTNode(node.iiot) && _.isFunction(node.iiot.resetAllTimer)) {\n    node.iiot.resetAllTimer()\n  }\n}\n\nexport function filterListEntryByNodeId(nodeId: string, list: string[]) {\n  return list.filter((item) => {\n    return item.toString().includes(nodeId)\n  })\n}\n\nexport function filterListByNodeId(nodeId: NodeIdLike, list: TodoTypeAny) {\n  if (nodeId === '') {\n    return list\n  }\n  return list.filter((item: TodoTypeAny) => {\n    // if item.nodeId is null, item may itself be a nodeId\n    return (item.nodeId || item).toString().includes(nodeId)\n  })\n}\n\nexport function isNodeTypeToFilterResponse(payload: TodoTypeAny) {\n  return payload.nodetype === 'read' || payload.nodetype === 'browse' || payload.nodetype === 'crawl' || payload.nodetype === 'method'\n}\n\nexport function isInitializedIIoTNode<T>(node: T | undefined): node is T {\n  return !!node\n}\n\nexport interface IotOpcUaNodeMessage extends NodeMessage {\n  payload: any\n  value: any\n  payloadType: string\n  nodetype: string\n  injectType: string\n  addressSpaceItems: AddressSpaceItem[]\n  manualInject: boolean\n}\n\n\n"]}