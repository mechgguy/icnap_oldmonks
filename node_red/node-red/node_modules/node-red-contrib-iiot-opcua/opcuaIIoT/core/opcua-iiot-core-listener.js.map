{"version":3,"sources":["../src/core/opcua-iiot-core-listener.ts"],"names":[],"mappings":"AAAA;;;;;;;;GAQG;AACH,YAAY,CAAA;;;;;AAKZ,kDAAyB;AAEzB,aAAa;AAGb,2CAAgG;AAChG,uDAAkE;AAClE,qCAAqD;AAErD,MAAM,gBAAgB,GAAG,IAAA,eAAK,EAAC,oBAAoB,CAAC,CAAA,CAAC,2CAA2C;AAChG,MAAM,cAAc,GAAG,IAAA,eAAK,EAAC,4BAA4B,CAAC,CAAA,CAAC,2CAA2C;AACtG,MAAM,iBAAiB,GAAG,IAAA,eAAK,EAAC,8BAA8B,CAAC,CAAA,CAAC,2CAA2C;AAC3G,MAAM,uBAAuB,GAAG,IAAA,eAAK,EAAC,sCAAsC,CAAC,CAAA,CAAC,2CAA2C;AACzH,MAAM,aAAa,GAAG,IAAA,eAAK,EAAC,0BAA0B,CAAC,CAAA,CAAC,2CAA2C;AACnG,MAAM,mBAAmB,GAAG,IAAA,eAAK,EAAC,kCAAkC,CAAC,CAAA,CAAC,2CAA2C;AACjH,MAAM,0BAA0B,GAAG,IAAI,CAAA,CAAC,2CAA2C;AACnF,MAAM,qBAAqB,GAAG,GAAG,CAAA,CAAC,2CAA2C;AAC7E,MAAM,qBAAqB,GAAG,OAAO,CAAA,CAAC,2CAA2C;AACjF,MAAM,4BAA4B,GAAG,CAAC,CAAA,CAAC,2CAA2C;AAClF,MAAM,sBAAsB,GAAG,GAAG,CAAA,CAAC,2CAA2C;AAC9E,MAAM,wBAAwB,GAAG,KAAK,CAAA,CAAC,2CAA2C;AAClF,MAAM,WAAW,GAAG,UAAU,CAAA,CAAC,2CAA2C;AAC1E,MAAM,aAAa,GAAG,mCAAiB,CAAC,YAAY,CAAA,CAAC,2CAA2C;AAChG,MAAM,SAAS,GAAG,UAAU,CAAA,CAAC,2CAA2C;AAwBxE,MAAM,0BAA0B,GAAG;IACjC,OAAO,IAAA,mBAAa,EAAqD;QACvE,EAAE,EAAE,UAAU;QACd,OAAO,EAAE,mCAAiB,CAAC,SAAS;QACpC,MAAM,EAAE;YACN,IAAI,EAAE,EAAE,EAAE,EAAE;oBACR,WAAW,EAAE,mCAAiB,CAAC,cAAc;oBAC7C,GAAG,EAAE,mCAAiB,CAAC,QAAQ;iBAChC;aACF;YACD,IAAI,EAAE,EAAE,EAAE,EAAE;oBACR,KAAK,EAAE,mCAAiB,CAAC,YAAY;oBACrC,SAAS,EAAE,mCAAiB,CAAC,eAAe;oBAC5C,KAAK,EAAE,mCAAiB,CAAC,UAAU;iBACpC;aACF;YACD,SAAS,EAAE,EAAE,EAAE,EAAE;oBACb,IAAI,EAAE,mCAAiB,CAAC,SAAS;iBAClC;aACF;YACD,OAAO,EAAE,EAAE,EAAE,EAAE;oBACX,SAAS,EAAE,mCAAiB,CAAC,eAAe;oBAC5C,KAAK,EAAE,mCAAiB,CAAC,UAAU;iBACpC;aACF;YACD,KAAK,EAAE,EAAE,EAAE,EAAE;oBACT,IAAI,EAAE,mCAAiB,CAAC,SAAS;oBACjC,IAAI,EAAE,mCAAiB,CAAC,SAAS;oBACjC,GAAG,EAAE,mCAAiB,CAAC,QAAQ;iBAChC;aACF;YACD,UAAU,EAAE,EAAE,EAAE,EAAE;oBACd,IAAI,EAAE,mCAAiB,CAAC,SAAS;oBACjC,KAAK,EAAE,mCAAiB,CAAC,UAAU;oBACnC,GAAG,EAAE,mCAAiB,CAAC,QAAQ;iBAChC;aACF;YACD,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;SAChB;KACF,CAAC,CAAA;AACJ,CAAC,CAAA;AAED,MAAM,2BAA2B,GAAG,CAAC,aAAkB,EAAE,EAAE;IACzD,OAAO,IAAA,eAAS,EAAC,aAAa,CAAC,CAAC,KAAK,EAAE,CAAA;AACzC,CAAC,CAAA;AAED,MAAM,2BAA2B,GAAG,CAAC,OAAoB,EAAE,OAA6B,EAAE,EAAE;IAC1F,IAAG,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,SAAS;QAAE,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAA;IAEtG,OAAO,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,CAAA;AACnC,CAAC,CAAA;AAED,MAAM,8BAA8B,GAAG,UAAU,gBAAwB;IACvE,gBAAgB,GAAG,gBAAgB,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,gBAAgB,CAAA;IACxE,OAAO;QACL,2BAA2B,EAAE,gBAAgB,IAAI,GAAG;QACpD,sBAAsB,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE;QACtC,0BAA0B,EAAE,GAAG;QAC/B,0BAA0B,EAAE,GAAG;QAC/B,iBAAiB,EAAE,IAAI;QACvB,QAAQ,EAAE,CAAC;KACZ,CAAA;AACH,CAAC,CAAA;AAED,MAAM,yBAAyB,GAAG,UAAU,gBAAwB;IAClE,gBAAgB,GAAG,gBAAgB,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,gBAAgB,CAAA;IACxE,OAAO;QACL,2BAA2B,EAAE,gBAAgB,IAAI,GAAG;QACpD,sBAAsB,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE;QACtC,0BAA0B,EAAE,EAAE;QAC9B,0BAA0B,EAAE,GAAG;QAC/B,iBAAiB,EAAE,IAAI;QACvB,QAAQ,EAAE,EAAE;KACb,CAAA;AACH,CAAC,CAAA;AAED,MAAM,kBAAkB,GAAG,UAAU,KAAkB,EAAE,QAAqB,EAAE,KAAkB;IAChG,OAAO;QACL,KAAK;QACL,QAAQ;QACR,KAAK;KACN,CAAA;AACH,CAAC,CAAA;AAED,MAAM,mBAAmB,GAAG;IAC1B,OAAO,CAAC,SAAS,EAAE,YAAY,EAAE,SAAS,EAAE,aAAa,CAAC,CAAA;AAC5D,CAAC,CAAA;AAED,MAAM,iBAAiB,GAAG;IACxB,OAAO;QACL,eAAe;QACf,eAAe;QACf,kBAAkB;QAClB,oBAAoB;QACpB,uBAAuB;QACvB,YAAY;QACZ,UAAU;QACV,WAAW;QACX,UAAU;QACV,QAAQ;QACR,SAAS;QACT,yBAAyB;QACzB,cAAc;QACd,iBAAiB;QACjB,mCAAmC;QACnC,6BAA6B;QAC7B,cAAc;QACd,8BAA8B;QAC9B,SAAS;QACT,yBAAyB;QACzB,MAAM;QACN,cAAc;QACd,YAAY;QACZ,eAAe;QACf,gBAAgB;QAChB,mBAAmB;QACnB,YAAY;QACZ,eAAe;QACf,aAAa;QACb,gBAAgB;KACjB,CAAA;AACH,CAAC,CAAA;AAED,MAAM,cAAc,GAAG;IACrB,OAAO;QACL,eAAe;QACf,YAAY;QACZ,SAAS;QACT,MAAM;QACN,cAAc;QACd,iBAAiB;QACjB,mCAAmC;QACnC,6BAA6B;QAC7B,YAAY;QACZ,eAAe;QACf,gBAAgB;QAChB,mBAAmB;QACnB,YAAY;QACZ,eAAe;QACf,aAAa;QACb,gBAAgB;KACjB,CAAA;AACH,CAAC,CAAA;AAED,MAAM,kBAAkB,GAAG;IACzB,OAAO;QACL,MAAM;QACN,SAAS;QACT,UAAU;QACV,YAAY;QACZ,eAAe;QACf,eAAe;QACf,kBAAkB;QAClB,oBAAoB;QACpB,uBAAuB;KACxB,CAAA;AACH,CAAC,CAAA;AAED,MAAM,YAAY,GAAG,UAAU,IAAiB,EAAE,GAAgB,EAAE,cAA2B;IAE7F,KAAK,IAAI,gBAAgB,IAAI,GAAG,CAAC,iBAAiB,EAAE;QAClD,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE;YAC5B,iBAAiB,CAAC,0CAA0C,GAAG,gBAAgB,CAAC,CAAA;YAChF,OAAM;SACP;QAED,IAAI,gBAAgB,CAAC,YAAY,KAAK,WAAW,EAAE;YACjD,iBAAiB,CAAC,4CAA4C,GAAG,gBAAgB,CAAC,CAAA;YAClF,OAAM;SACP;QAED,MAAM,eAAe,GAAG,CAAC,OAAO,gBAAgB,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,gBAAgB,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAA;QAEpI,IAAI,eAAe,EAAE;YACnB,iBAAiB,CAAC,6BAA6B,GAAG,eAAe,CAAC,CAAA;YAClE,qBAAqB,CAAC,eAAe,EAAE,GAAG,EAAE,cAAc,CAAC;iBACxD,IAAI,CAAC,UAAU,MAAmB;gBACjC,IAAI,MAAM,CAAC,aAAa,CAAC,eAAe,EAAE;oBACxC,iBAAiB,CAAC,+BAA+B,GAAG,MAAM,CAAC,aAAa,CAAC,eAAe,GAAG,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAA;oBAClH,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE;wBACnD,aAAa,EAAE,MAAM,CAAC,aAAa;wBACnC,KAAK,EAAE,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK;qBAC/B,CAAC,CAAA;iBACH;YACH,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,GAAU;gBAC7B,iBAAiB,CAAC,GAAG,CAAC,CAAA;gBACtB,IAAI,IAAI,CAAC,UAAU,EAAE;oBACnB,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;iBACrB;YACH,CAAC,CAAC,CAAA;SACH;KACF;AACH,CAAC,CAAA;AAED,MAAM,qBAAqB,GAAG,UAAU,MAAmB,EAAE,GAAgB,EAAE,YAAyB;IACtG,OAAO,IAAI,OAAO,CAChB,UAAU,OAAO,EAAE,MAAM;QACvB,IAAI,CAAC,MAAM,EAAE;YACX,MAAM,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC,CAAA;YACxC,OAAM;SACP;QAED,IAAI,QAAQ,CAAA;QACZ,IAAI,SAAS,CAAA;QACb,IAAI,OAAO,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAA;QAC7F,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,QAAQ;YACtC,OAAO,CAAC,QAAQ,IAAI,qBAAqB;YACzC,OAAO,CAAC,QAAQ,IAAI,qBAAqB,EAAE;YAC3C,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA;SACtC;aAAM;YACL,QAAQ,GAAG,0BAA0B,CAAA;SACtC;QAED,IAAI,OAAO,CAAC,SAAS,IAAI,OAAO,OAAO,CAAC,SAAS,KAAK,QAAQ,EAAE;YAC9D,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;SACxC;aAAM;YACL,SAAS,GAAG,4BAA4B,CAAA;SACzC;QAED,YAAY,CAAC,OAAO,CAClB;YACE,MAAM,EAAE,IAAA,0BAAa,EAAC,MAAM,CAAC;YAC7B,WAAW,EAAE,yBAAY,CAAC,KAAK;SAChC,EACD;YACE,gBAAgB,EAAE,QAAQ;YAC1B,aAAa,EAAE,IAAI;YACnB,SAAS,EAAE,SAAS;SACrB,EACD,+BAAkB,CAAC,IAAI,EACvB,UAAU,GAAU,EAAE,mBAAgC;YACpD,IAAI,GAAG,EAAE;gBACP,gBAAgB,CAAC,6BAA6B,GAAG,GAAG,CAAC,CAAA;gBACrD,MAAM,CAAC,GAAG,CAAC,CAAA;aACZ;iBAAM;gBACL,OAAO,CAAC,EAAC,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,mBAAmB,EAAC,CAAC,CAAA;aAC9D;QACH,CAAC,CACF,CAAA;IACH,CAAC,CAAC,CAAA;AACN,CAAC,CAAA;AAED,MAAM,0BAA0B,GAAG,UAAU,IAAiB,EAAE,GAAgB,EAAE,iBAA8B,EAAE,YAAyB;IACzI,OAAO,IAAI,OAAO,CAChB,UAAU,OAAO,EAAE,MAAM;QACvB,IAAI,CAAC,iBAAiB,EAAE;YACtB,MAAM,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC,CAAA;YACxC,OAAM;SACP;QAED,IAAI,QAAQ,CAAA;QACZ,IAAI,SAAS,CAAA;QAEb,IAAI,OAAO,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAA;QAC7F,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,QAAQ;YACtC,OAAO,CAAC,QAAQ,IAAI,qBAAqB;YACzC,OAAO,CAAC,QAAQ,IAAI,qBAAqB,EAAE;YAC3C,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA;SACtC;aAAM;YACL,QAAQ,GAAG,0BAA0B,CAAA;SACtC;QAED,IAAI,OAAO,CAAC,SAAS,IAAI,OAAO,OAAO,CAAC,SAAS,KAAK,QAAQ,EAAE;YAC9D,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;SACxC;aAAM;YACL,SAAS,GAAG,4BAA4B,CAAA;SACzC;QAED,IAAI,yBAAyB,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC,gBAA6B,EAAE,EAAE;YACzF,OAAO,gBAAgB,CAAC,YAAY,KAAK,WAAW,CAAA;QACtD,CAAC,CAAC,CAAA;QAEF,IAAI,gBAAgB,GAAkB,EAAE,CAAA;QACxC,yBAAyB,CAAC,OAAO,CAAC,CAAC,IAAiB,EAAE,EAAE;YACtD,gBAAgB,CAAC,IAAI,CAAC;gBACpB,MAAM,EAAE,IAAA,0BAAa,EAAC,IAAI,CAAC,MAAM,CAAC;gBAClC,WAAW,EAAE,yBAAY,CAAC,KAAK;aAChC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,YAAY,CAAC,YAAY,CACvB,gBAAgB,EAChB;YACE,gBAAgB,EAAE,QAAQ;YAC1B,aAAa,EAAE,IAAI;YACnB,SAAS,EAAE,SAAS;SACrB,EACD,+BAAkB,CAAC,IAAI,EACvB,UAAU,GAAU,EAAE,kBAA+B;YACnD,IAAI,GAAG,EAAE;gBACP,gBAAgB,CAAC,mCAAmC,GAAG,GAAG,CAAC,CAAA;gBAC3D,MAAM,CAAC,GAAG,CAAC,CAAA;aACZ;iBAAM;gBACL,OAAO,CAAC,EAAC,iBAAiB,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,kBAAkB,EAAC,CAAC,CAAA;aACxF;QACH,CAAC,CACF,CAAA;IACH,CAAC,CAAC,CAAA;AACN,CAAC,CAAA;AAED,MAAM,iBAAiB,GAAG,UAAU,MAAmB,EAAE,GAAgB,EAAE,YAAyB;IAClG,OAAO,IAAI,OAAO,CAChB,UAAU,OAAO,EAAE,MAAM;QACvB,IAAI,CAAC,MAAM,EAAE;YACX,MAAM,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC,CAAA;YACxC,OAAM;SACP;QAED,IAAI,QAAQ,CAAA;QACZ,IAAI,SAAS,CAAA;QAEb,IAAI,OAAO,GAAG,CAAC,OAAO,CAAC,QAAQ,KAAK,QAAQ,IAAI,GAAG,CAAC,OAAO,CAAC,QAAQ,GAAG,qBAAqB,EAAE;YAC5F,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA;SAC1C;aAAM;YACL,QAAQ,GAAG,sBAAsB,CAAA;SAClC;QAED,IAAI,OAAO,GAAG,CAAC,OAAO,CAAC,SAAS,KAAK,QAAQ,EAAE;YAC7C,SAAS,GAAG,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;SAC5C;aAAM;YACL,SAAS,GAAG,wBAAwB,CAAA;SACrC;QAED,YAAY,CAAC,OAAO,CAClB;YACE,MAAM,EAAE,IAAA,0BAAa,EAAC,MAAM,CAAC;YAC7B,WAAW,EAAE,yBAAY,CAAC,aAAa;SACxC,EACD;YACE,gBAAgB,EAAE,QAAQ;YAC1B,aAAa,EAAE,IAAI;YACnB,SAAS,EAAE,SAAS;YACpB,MAAM,EAAE,GAAG,CAAC,OAAO,CAAC,WAAW;SAChC,EACD,+BAAkB,CAAC,IAAI,EACvB,UAAU,GAAU,EAAE,mBAAgC;YACpD,IAAI,GAAG,EAAE;gBACP,gBAAgB,CAAC,yBAAyB,GAAG,GAAG,CAAC,CAAA;gBACjD,MAAM,CAAC,GAAG,CAAC,CAAA;aACZ;iBAAM;gBACL,OAAO,CAAC,EAAC,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,mBAAmB,EAAC,CAAC,CAAA;aAC9D;QACH,CAAC,CACF,CAAA;IACH,CAAC,CAAC,CAAA;AACN,CAAC,CAAA;AAED,MAAM,YAAY,GAAG,UAAU,OAAoB,EAAE,mBAA0D,EAAE,SAAsB;IACrI,OAAO,IAAI,OAAO,CAChB,UAAU,OAAO,EAAE,MAAM;QACvB,IAAI,CAAC,OAAO,EAAE;YACZ,MAAM,CAAC,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC,CAAA;YAC1D,OAAM;SACP;QAED,IAAI,CAAC,mBAAmB,IAAI,OAAO,mBAAmB,KAAK,UAAU,EAAE;YACrE,MAAM,CAAC,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC,CAAA;YAC9D,OAAM;SACP;QACD,IAAI,CAAC,SAAS,EAAE;YACd,MAAM,CAAC,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC,CAAA;SAC9C;aAAM;YACL,IAAI,KAAK,GAAG,CAAC,CAAA;YACb,IAAI,gBAAgB,GAAgB,EAAE,CAAA;YACtC,IAAI,YAAY,GAAkB,EAAE,CAAA;YACpC,SAAS,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE;;gBACvB,MAAM,OAAO,GAAG,EAAE,CAAC,KAAK,CAAA;gBACxB,aAAa,CAAC,iBAAiB,IAAG,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ,EAAE,CAAA,CAAC,CAAA;gBAEtD,IAAI;oBACF,IAAI,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,KAAK,EAAE;wBACrC,gBAAgB,GAAG,kBAAkB,CAAE,SAAyB,CAAC,oBAAoB,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ,0CAAE,QAAQ,EAAE,EAAE,OAAO,CAAC,KAAK,CAAC,CAAA;wBAEhK,IAAI,OAAO,CAAC,QAAQ,KAAK,qBAAQ,CAAC,MAAM,EAAE;4BACxC,mBAAmB,CAAC,OAAO,EAAE,OAAO,CAAC,KAAK,EAAE,UAAU,GAAsB,EAAE,UAAuB;gCACnG,IAAI,GAAG,EAAE;oCACP,MAAM,CAAC,GAAG,CAAC,CAAA;iCACZ;qCAAM;oCACL,gBAAgB,CAAC,UAAU,GAAG,UAAU,CAAA;oCACxC,YAAY,CAAC,IAAI,CAAC,EAAC,gBAAgB,EAAE,gBAAgB,EAAE,SAAS,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,EAAE,EAAC,CAAC,CAAA;iCACtF;4BACH,CAAC,CAAC,CAAA;yBACH;6BAAM;4BACL,YAAY,CAAC,IAAI,CAAC,EAAC,gBAAgB,EAAE,gBAAgB,EAAE,SAAS,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,EAAE,EAAC,CAAC,CAAA;yBACtF;qBACF;oBACD,KAAK,EAAE,CAAA;iBACR;gBAAC,OAAO,GAAG,EAAE;oBACZ,gBAAgB,GAAG,EAAC,KAAK,EAAE,GAAG,EAAC,CAAA;oBAC/B,YAAY,CAAC,IAAI,CAAC,EAAC,gBAAgB,EAAE,gBAAgB,EAAE,SAAS,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,EAAE,EAAC,CAAC,CAAA;iBACtF;YACH,CAAC,CAAC,CAAA;YACF,OAAO,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAA;SAC7B;IACH,CAAC,CACF,CAAA;AACH,CAAC,CAAA;AAED,MAAM,UAAU,GAAG,UAAU,IAAiB,EAAE,GAAgB,EAAE,UAAuB;IACvF,gBAAgB,CAAC,uBAAuB,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,GAAG,UAAU,CAAC,CAAA;IAEpG,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,KAAK,aAAa,EAAE;QACpG,gBAAgB,CAAC,uBAAuB,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,GAAG,UAAU,CAAC,CAAA;QACpG,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,eAAe,GAAG,aAAa,GAAG,MAAM,GAAG,UAAU,CAAC,EAAE,GAAG,CAAC,CAAA;SAClF;QACD,OAAO,KAAK,CAAA;KACb;SAAM;QACL,OAAO,IAAI,CAAA;KACZ;AACH,CAAC,CAAA;AAED,MAAM,gBAAgB,GAAG;IACvB,uCACK,IAAA,8BAAY,GAAE,KACjB,iBAAiB,EAAE,IAAI,EACvB,cAAc,EAAE,IAAI,GAAG,EAAE,EACzB,YAAY,EAAE,IAAI,GAAG,EAAE,EACvB,YAAY,EAAE,EAAE,IACjB;AACH,CAAC,CAAA;AAED,MAAM,YAAY,GAAG;IACnB,gBAAgB;IAChB,cAAc;IACd,iBAAiB;IACjB,uBAAuB;IACvB,aAAa;IACb,mBAAmB;IAEnB,0BAA0B;IAC1B,qBAAqB;IACrB,qBAAqB;IACrB,4BAA4B;IAC5B,sBAAsB;IACtB,wBAAwB;IACxB,WAAW;IACX,aAAa;IACb,SAAS;IAET,0BAA0B;IAC1B,2BAA2B;IAC3B,2BAA2B;IAC3B,8BAA8B;IAC9B,yBAAyB;IACzB,kBAAkB;IAClB,mBAAmB;IACnB,iBAAiB;IACjB,cAAc;IACd,kBAAkB;IAClB,YAAY;IACZ,qBAAqB;IACrB,0BAA0B;IAC1B,iBAAiB;IACjB,YAAY;IACZ,UAAU;IACV,gBAAgB;CACjB,CAAA;AAED,kBAAe,YAAY,CAAC","file":"opcua-iiot-core-listener.js","sourcesContent":["/**\n The BSD 3-Clause License\n\n Copyright 2022 - DATATRONiQ GmbH (https://datatroniq.com)\n Copyright (c) 2018-2022 Klaus Landsdorf (http://node-red.plus/)\n Copyright 2015,2016 - Mika Karaila, Valmet Automation Inc. (node-red-contrib-opcua)\n All rights reserved.\n node-red-contrib-iiot-opcua\n */\n'use strict'\n// SOURCE-MAP-REQUIRED\n\nimport {TodoTypeAny} from \"../types/placeholders\";\n\nimport debug from 'debug'\n\n// @ts-ignore\n\n\nimport {AttributeIds, DataType, DataValue, resolveNodeId, TimestampsToReturn} from \"node-opcua\";\nimport {initCoreNode, FsmListenerStates} from \"./opcua-iiot-core\";\nimport {createMachine, interpret} from \"@xstate/fsm\";\n\nconst internalDebugLog = debug('opcuaIIoT:listener') // eslint-disable-line no-use-before-define\nconst detailDebugLog = debug('opcuaIIoT:listener:details') // eslint-disable-line no-use-before-define\nconst subscribeDebugLog = debug('opcuaIIoT:listener:subscribe') // eslint-disable-line no-use-before-define\nconst subscribeDetailDebugLog = debug('opcuaIIoT:listener:subscribe:details') // eslint-disable-line no-use-before-define\nconst eventDebugLog = debug('opcuaIIoT:listener:event') // eslint-disable-line no-use-before-define\nconst eventDetailDebugLog = debug('opcuaIIoT:listener:event:details') // eslint-disable-line no-use-before-define\nconst SUBSCRIBE_DEFAULT_INTERVAL = 1000 // eslint-disable-line no-use-before-define\nconst MIN_LISTENER_INTERVAL = 100 // eslint-disable-line no-use-before-define\nconst MAX_LISTENER_INTERVAL = 3600000 // eslint-disable-line no-use-before-define\nconst SUBSCRIBE_DEFAULT_QUEUE_SIZE = 1 // eslint-disable-line no-use-before-define\nconst EVENT_DEFAULT_INTERVAL = 250 // eslint-disable-line no-use-before-define\nconst EVENT_DEFAULT_QUEUE_SIZE = 10000 // eslint-disable-line no-use-before-define\nconst METHOD_TYPE = 'ns=0;i=0' // eslint-disable-line no-use-before-define\nconst RUNNING_STATE = FsmListenerStates.StateStarted // eslint-disable-line no-use-before-define\nconst MAX_INT32 = 2147483647 // eslint-disable-line no-use-before-define\n\ninterface ListenerDebugContext {\n  debugContext?: string\n}\n\ntype ListenerEvent =\n    | { type: 'REQUESTINIT' }\n    | { type: 'END'}\n    | { type: 'INIT'}\n    | { type: 'START'}\n    | { type: 'TERMINATE'}\n    | { type: 'ERROR'}\n    | { type: 'IDLE'}\n\ntype ListenerState =\n    | { value: FsmListenerStates.StateIdle; context: ListenerDebugContext & { debugContext: undefined } }\n    | { value: FsmListenerStates.StateInit; context: ListenerDebugContext & { debugContext: undefined } }\n    | { value: FsmListenerStates.StateEnd; context: ListenerDebugContext & { debugContext: undefined } }\n    | { value: FsmListenerStates.StateRequested; context: ListenerDebugContext & { debugContext: undefined } }\n    | { value: FsmListenerStates.StateStarted; context: ListenerDebugContext & { debugContext: undefined } }\n    | { value: FsmListenerStates.StateError; context: ListenerDebugContext & { debugContext: undefined } }\n    | { value: FsmListenerStates.StateTerminated; context: ListenerDebugContext & { debugContext: undefined } }\n\nconst createListenerStateMachine = function () {\n  return createMachine<ListenerDebugContext, ListenerEvent, ListenerState>({\n    id: 'listener',\n    initial: FsmListenerStates.StateIdle,\n    states: {\n      idle: { on: {\n          REQUESTINIT: FsmListenerStates.StateRequested,\n          END: FsmListenerStates.StateEnd\n        }\n      },\n      init: { on: {\n          START: FsmListenerStates.StateStarted,\n          TERMINATE: FsmListenerStates.StateTerminated,\n          ERROR: FsmListenerStates.StateError\n        }\n      },\n      requested: { on: {\n          INIT: FsmListenerStates.StateInit\n        }\n      },\n      started: { on: {\n          TERMINATE: FsmListenerStates.StateTerminated,\n          ERROR: FsmListenerStates.StateError\n        }\n      },\n      error: { on: {\n          IDLE: FsmListenerStates.StateIdle,\n          INIT: FsmListenerStates.StateInit,\n          END: FsmListenerStates.StateEnd\n        }\n      },\n      terminated: { on: {\n          IDLE: FsmListenerStates.StateIdle,\n          ERROR: FsmListenerStates.StateError,\n          END: FsmListenerStates.StateEnd\n        }\n      },\n      end: { on: {} }\n    }\n  })\n}\n\nconst startListenerMachineService = (toggleMachine: any) => {\n  return interpret(toggleMachine).start()\n}\n\nconst subscribeListenerFSMService = (service: TodoTypeAny, eventFn: (state: any) => void) => {\n  if(service === undefined || eventFn === undefined) throw new Error('Service or event handler missing')\n\n  return service.subscribe(eventFn)\n}\n\nconst getEventSubscriptionParameters = function (timeMilliseconds: number) {\n  timeMilliseconds = timeMilliseconds > MAX_INT32 ? 100 : timeMilliseconds\n  return {\n    requestedPublishingInterval: timeMilliseconds || 100,\n    requestedLifetimeCount: 1000 * 60 * 20,\n    requestedMaxKeepAliveCount: 120,\n    maxNotificationsPerPublish: 200,\n    publishingEnabled: true,\n    priority: 2\n  }\n}\n\nconst getSubscriptionParameters = function (timeMilliseconds: number) {\n  timeMilliseconds = timeMilliseconds > MAX_INT32 ? 200 : timeMilliseconds\n  return {\n    requestedPublishingInterval: timeMilliseconds || 200,\n    requestedLifetimeCount: 1000 * 60 * 10,\n    requestedMaxKeepAliveCount: 60,\n    maxNotificationsPerPublish: 100,\n    publishingEnabled: true,\n    priority: 10\n  }\n}\n\nconst collectAlarmFields = function (field: TodoTypeAny, dataType: TodoTypeAny, value: TodoTypeAny) {\n  return {\n    field,\n    dataType,\n    value\n  }\n}\n\nconst getBasicEventFields = function () {\n  return ['EventId', 'SourceName', 'Message', 'ReceiveTime']\n}\n\nconst getAllEventFields = function () {\n  return [\n    'ConditionName',\n    'ConditionType',\n    'ConditionClassId',\n    'ConditionClassName',\n    'ConditionVariableType',\n    'SourceNode',\n    'BranchId',\n    'EventType',\n    'Severity',\n    'Retain',\n    'Comment',\n    'Comment.SourceTimestamp',\n    'EnabledState',\n    'EnabledState.Id',\n    'EnabledState.EffectiveDisplayName',\n    'EnabledState.TransitionTime',\n    'LastSeverity',\n    'LastSeverity.SourceTimestamp',\n    'Quality',\n    'Quality.SourceTimestamp',\n    'Time',\n    'ClientUserId',\n    'AckedState',\n    'AckedState.Id',\n    'ConfirmedState',\n    'ConfirmedState.Id',\n    'LimitState',\n    'LimitState.Id',\n    'ActiveState',\n    'ActiveState.Id'\n  ]\n}\n\nconst getStateFields = function () {\n  return [\n    'ConditionName',\n    'SourceNode',\n    'Quality',\n    'Time',\n    'EnabledState',\n    'EnabledState.Id',\n    'EnabledState.EffectiveDisplayName',\n    'EnabledState.TransitionTime',\n    'AckedState',\n    'AckedState.Id',\n    'ConfirmedState',\n    'ConfirmedState.Id',\n    'LimitState',\n    'LimitState.Id',\n    'ActiveState',\n    'ActiveState.Id'\n  ]\n}\n\nconst getConditionFields = function () {\n  return [\n    'Time',\n    'Quality',\n    'BranchId',\n    'SourceNode',\n    'ConditionName',\n    'ConditionType',\n    'ConditionClassId',\n    'ConditionClassName',\n    'ConditionVariableType'\n  ]\n}\n\nconst monitorItems = function (node: TodoTypeAny, msg: TodoTypeAny, uaSubscription: TodoTypeAny) {\n\n  for (let addressSpaceItem of msg.addressSpaceItems) {\n    if (!addressSpaceItem.nodeId) {\n      subscribeDebugLog('Address Space Item Not Valid to Monitor ' + addressSpaceItem)\n      return\n    }\n\n    if (addressSpaceItem.datatypeName === METHOD_TYPE) {\n      subscribeDebugLog('Address Space Item Not Allowed to Monitor ' + addressSpaceItem)\n      return\n    }\n\n    const nodeIdToMonitor = (typeof addressSpaceItem.nodeId === 'string') ? addressSpaceItem.nodeId : addressSpaceItem.nodeId.toString()\n\n    if (nodeIdToMonitor) {\n      subscribeDebugLog('Monitored Item Subscribing ' + nodeIdToMonitor)\n      buildNewMonitoredItem(nodeIdToMonitor, msg, uaSubscription)\n        .then(function (result: TodoTypeAny) {\n          if (result.monitoredItem.monitoredItemId) {\n            subscribeDebugLog('Monitored Item Subscribed Id:' + result.monitoredItem.monitoredItemId + ' to ' + result.nodeId)\n            node.iiot.monitoredASO.set(result.nodeId.toString(), {\n              monitoredItem: result.monitoredItem,\n              topic: msg.topic || node.topic\n            })\n          }\n        }).catch(function (err: Error) {\n        subscribeDebugLog(err)\n        if (node.showErrors) {\n          node.error(err, msg)\n        }\n      })\n    }\n  }\n}\n\nconst buildNewMonitoredItem = function (nodeId: TodoTypeAny, msg: TodoTypeAny, subscription: TodoTypeAny) {\n  return new Promise(\n    function (resolve, reject) {\n      if (!nodeId) {\n        reject(new Error('NodeId Is Not Valid'))\n        return\n      }\n\n      let interval\n      let queueSize\n      let options = (msg.payload.listenerParameters) ? msg.payload.listenerParameters : msg.payload\n      if (typeof options.interval === 'number' &&\n        options.interval <= MAX_LISTENER_INTERVAL &&\n        options.interval >= MIN_LISTENER_INTERVAL) {\n        interval = parseInt(options.interval)\n      } else {\n        interval = SUBSCRIBE_DEFAULT_INTERVAL\n      }\n\n      if (options.queueSize && typeof options.queueSize === 'number') {\n        queueSize = parseInt(options.queueSize)\n      } else {\n        queueSize = SUBSCRIBE_DEFAULT_QUEUE_SIZE\n      }\n\n      subscription.monitor(\n        {\n          nodeId: resolveNodeId(nodeId),\n          attributeId: AttributeIds.Value\n        },\n        {\n          samplingInterval: interval,\n          discardOldest: true,\n          queueSize: queueSize\n        },\n        TimestampsToReturn.Both,\n        function (err: Error, monitoredItemResult: TodoTypeAny) {\n          if (err) {\n            internalDebugLog('subscribing monitored item ' + err)\n            reject(err)\n          } else {\n            resolve({nodeId: nodeId, monitoredItem: monitoredItemResult})\n          }\n        }\n      )\n    })\n}\n\nconst buildNewMonitoredItemGroup = function (node: TodoTypeAny, msg: TodoTypeAny, addressSpaceItems: TodoTypeAny, subscription: TodoTypeAny) {\n  return new Promise(\n    function (resolve, reject) {\n      if (!addressSpaceItems) {\n        reject(new Error('NodeId Is Not Valid'))\n        return\n      }\n\n      let interval\n      let queueSize\n\n      let options = (msg.payload.listenerParameters) ? msg.payload.listenerParameters : msg.payload\n      if (typeof options.interval === 'number' &&\n        options.interval <= MAX_LISTENER_INTERVAL &&\n        options.interval >= MIN_LISTENER_INTERVAL) {\n        interval = parseInt(options.interval)\n      } else {\n        interval = SUBSCRIBE_DEFAULT_INTERVAL\n      }\n\n      if (options.queueSize && typeof options.queueSize === 'number') {\n        queueSize = parseInt(options.queueSize)\n      } else {\n        queueSize = SUBSCRIBE_DEFAULT_QUEUE_SIZE\n      }\n\n      let filteredAddressSpaceItems = addressSpaceItems.filter((addressSpaceItem: TodoTypeAny) => {\n        return addressSpaceItem.datatypeName !== METHOD_TYPE\n      })\n\n      let subcriptionItems: TodoTypeAny[] = []\n      filteredAddressSpaceItems.forEach((item: TodoTypeAny) => {\n        subcriptionItems.push({\n          nodeId: resolveNodeId(item.nodeId),\n          attributeId: AttributeIds.Value\n        })\n      })\n\n      subscription.monitorItems(\n        subcriptionItems,\n        {\n          samplingInterval: interval,\n          discardOldest: true,\n          queueSize: queueSize\n        },\n        TimestampsToReturn.Both,\n        function (err: Error, monitoredItemGroup: TodoTypeAny) {\n          if (err) {\n            internalDebugLog('subscribing monitored item group ' + err)\n            reject(err)\n          } else {\n            resolve({addressSpaceItems: addressSpaceItems, monitoredItemGroup: monitoredItemGroup})\n          }\n        }\n      )\n    })\n}\n\nconst buildNewEventItem = function (nodeId: TodoTypeAny, msg: TodoTypeAny, subscription: TodoTypeAny) {\n  return new Promise(\n    function (resolve, reject) {\n      if (!nodeId) {\n        reject(new Error('NodeId Is Not Valid'))\n        return\n      }\n\n      let interval\n      let queueSize\n\n      if (typeof msg.payload.interval === 'number' && msg.payload.interval < MAX_LISTENER_INTERVAL) {\n        interval = parseInt(msg.payload.interval)\n      } else {\n        interval = EVENT_DEFAULT_INTERVAL\n      }\n\n      if (typeof msg.payload.queueSize === 'number') {\n        queueSize = parseInt(msg.payload.queueSize)\n      } else {\n        queueSize = EVENT_DEFAULT_QUEUE_SIZE\n      }\n\n      subscription.monitor(\n        {\n          nodeId: resolveNodeId(nodeId),\n          attributeId: AttributeIds.EventNotifier\n        },\n        {\n          samplingInterval: interval,\n          discardOldest: true,\n          queueSize: queueSize,\n          filter: msg.payload.eventFilter\n        },\n        TimestampsToReturn.Both,\n        function (err: Error, monitoredItemResult: TodoTypeAny) {\n          if (err) {\n            internalDebugLog('subscribing event item ' + err)\n            reject(err)\n          } else {\n            resolve({nodeId: nodeId, monitoredItem: monitoredItemResult})\n          }\n        }\n      )\n    })\n}\n\nconst analyzeEvent = function (session: TodoTypeAny, browseForBrowseName: (...args: TodoTypeAny) => TodoTypeAny, dataValue: DataValue[]) {\n  return new Promise(\n    function (resolve, reject) {\n      if (!session) {\n        reject(new Error('Session Is Not Valid To Analyze Event'))\n        return\n      }\n\n      if (!browseForBrowseName || typeof browseForBrowseName !== 'function') {\n        reject(new Error('BrowseForBrowseName Is Not Valid Function'))\n        return\n      }\n      if (!dataValue) {\n        reject(new Error('Event Response Not Valid'))\n      } else {\n        let index = 0\n        let eventInformation: TodoTypeAny = {}\n        let eventResults: TodoTypeAny[] = []\n        dataValue.forEach((dv) => {\n          const variant = dv.value\n          eventDebugLog('variant entry: ' + variant?.toString())\n\n          try {\n            if (variant.dataType && variant.value) {\n              eventInformation = collectAlarmFields((dataValue as TodoTypeAny).monitoringParameters.filter.selectClauses[index], variant?.dataType?.toString(), variant.value)\n\n              if (variant.dataType === DataType.NodeId) {\n                browseForBrowseName(session, variant.value, function (err: Error | undefined, browseName: TodoTypeAny) {\n                  if (err) {\n                    reject(err)\n                  } else {\n                    eventInformation.browseName = browseName\n                    eventResults.push({eventInformation: eventInformation, eventData: variant?.toJSON()})\n                  }\n                })\n              } else {\n                eventResults.push({eventInformation: eventInformation, eventData: variant?.toJSON()})\n              }\n            }\n            index++\n          } catch (err) {\n            eventInformation = {error: err}\n            eventResults.push({eventInformation: eventInformation, eventData: variant?.toJSON()})\n          }\n        })\n        resolve(eventResults.flat())\n      }\n    }\n  )\n}\n\nconst checkState = function (node: TodoTypeAny, msg: TodoTypeAny, callerType: TodoTypeAny) {\n  internalDebugLog('Check Listener State ' + node.iiot.stateService.state.value + ' By ' + callerType)\n\n  if (node.connector && node.iiot.stateService && node.iiot.stateService.state.value !== RUNNING_STATE) {\n    internalDebugLog('Wrong Listener State ' + node.iiot.stateService.state.value + ' By ' + callerType)\n    if (node.showErrors) {\n      node.error(new Error('Listener Not ' + RUNNING_STATE + ' On ' + callerType), msg)\n    }\n    return false\n  } else {\n    return true\n  }\n}\n\nconst initListenerNode = function () {\n  return {\n    ...initCoreNode(),\n    opcuaSubscription: null,\n    monitoredItems: new Map(),\n    monitoredASO: new Map(),\n    messageQueue: []\n  }\n}\n\nconst coreListener = {\n  internalDebugLog,\n  detailDebugLog,\n  subscribeDebugLog,\n  subscribeDetailDebugLog,\n  eventDebugLog,\n  eventDetailDebugLog,\n\n  SUBSCRIBE_DEFAULT_INTERVAL,\n  MIN_LISTENER_INTERVAL,\n  MAX_LISTENER_INTERVAL,\n  SUBSCRIBE_DEFAULT_QUEUE_SIZE,\n  EVENT_DEFAULT_INTERVAL,\n  EVENT_DEFAULT_QUEUE_SIZE,\n  METHOD_TYPE,\n  RUNNING_STATE,\n  MAX_INT32,\n\n  createListenerStateMachine,\n  startListenerMachineService,\n  subscribeListenerFSMService,\n  getEventSubscriptionParameters,\n  getSubscriptionParameters,\n  collectAlarmFields,\n  getBasicEventFields,\n  getAllEventFields,\n  getStateFields,\n  getConditionFields,\n  monitorItems,\n  buildNewMonitoredItem,\n  buildNewMonitoredItemGroup,\n  buildNewEventItem,\n  analyzeEvent,\n  checkState,\n  initListenerNode,\n}\n\nexport default coreListener;\n"]}