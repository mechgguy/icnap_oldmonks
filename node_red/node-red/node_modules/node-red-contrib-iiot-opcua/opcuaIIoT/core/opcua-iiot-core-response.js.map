{"version":3,"sources":["../src/core/opcua-iiot-core-response.ts"],"names":[],"mappings":"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","file":"opcua-iiot-core-response.js","sourcesContent":["/**\n The BSD 3-Clause License\n\n Copyright 2022 - DATATRONiQ GmbH (https://datatroniq.com)\n Copyright (c) 2018-2022 Klaus Landsdorf (http://node-red.plus/)\n Copyright 2015,2016 - Mika Karaila, Valmet Automation Inc. (node-red-contrib-opcua)\n All rights reserved.\n node-red-contrib-iiot-opcua\n */\n'use strict'\n// SOURCE-MAP-REQUIRED\n\nimport {TodoTypeAny} from \"../types/placeholders\";\nimport debug from 'debug';\nimport {Node, NodeStatusFill} from \"node-red\";\nimport {BrowseResult, StatusCode} from \"node-opcua\";\nimport {NodeIdLike} from \"node-opcua-nodeid\";\nimport {AddressSpaceItem, StatusInput} from \"../types/helpers\";\nimport {CrawlerPayload} from \"../opcua-iiot-crawler\";\nimport {BrowserPayload} from \"../opcua-iiot-browser\";\nimport {AnyPayload} from \"../types/payloads\";\nimport {isArray} from \"../types/assertion\";\nimport {ReadPayload} from \"../opcua-iiot-read\";\n\ntype EntryStatus = {\n  good: number,\n  bad: number,\n  other: number,\n}\n\nexport type ResponseInputPayload = {\n  outputArguments: TodoTypeAny;\n  value?: any\n  browserResults?: BrowseResult[]\n  crawlerResults?: (string | BrowseResult[])[]\n  statusCodes?: StatusCode[]\n  entryStatus: EntryStatus\n  entryStatusText?: string\n  readtype?: string\n  injectType?: string\n  results?: any\n  statusCode?: StatusCode\n  nodesToRead?: AddressSpaceItem[]\n  nodesToWrite?: AddressSpaceItem[]\n  valuesToWrite?: AddressSpaceItem[]\n  addressSpaceItems: AddressSpaceItem[]\n  dataType?: TodoTypeAny\n  nodeId?: NodeIdLike\n  methodType?: string\n  nodetype?: string,\n  payloadType?: string\n}\n\nconst internalDebugLog = debug('opcuaIIoT:response') // eslint-disable-line no-use-before-define\nconst detailDebugLog = debug('opcuaIIoT:response:details') // eslint-disable-line no-use-before-define\nconst EMPTY_LIST = 0\nconst NONE = 0\n\nconst analyzeBrowserResults = function (node: Node, payload: BrowserPayload) {\n  handlePayloadStatusCode(node, payload.browserResults, payload as AnyPayload)\n}\n\nconst analyzeCrawlerResults = function (node: Node, payload: CrawlerPayload) {\n  handlePayloadStatusCode(node, payload.value, payload as AnyPayload)\n}\n\nconst analyzeReadResults = (node: Node, payload: ReadPayload) => {\n  handlePayloadStatusCode(node, payload.value, payload)\n  if (payload.readtype === 'HistoryValue') {\n    payload.value.map((item: any) => {\n      delete item['statusCode']\n    })\n  }\n  reconsturctNodeIdOnRead(payload)\n}\n\nconst analyzeListenerResults = function (node: Node, payload: ResponseInputPayload) {\n  switch (payload.injectType) {\n    case 'subscribe':\n    case 'event':\n      handlePayloadStatusCode(node, payload.value, payload)\n      break\n    default:\n      break\n  }\n}\n\nconst analyzeMethodResults = function (node: Node, payload: ResponseInputPayload) {\n  switch (payload.methodType) {\n    case 'basic':\n    case 'complex':\n      handlePayloadStatusCode(node, payload.value, payload)\n      break\n    default:\n      break\n  }\n}\n\nconst setNodeStatus = (node: Node, entryStatus: EntryStatus, informationText: string ) => {\n  let fillColor: NodeStatusFill = 'green'\n\n  if (entryStatus && Object.keys(entryStatus).length === 3) {\n    if (entryStatus['other'] > EMPTY_LIST) {\n      fillColor = 'yellow'\n    }\n\n    if (entryStatus['bad'] > EMPTY_LIST) {\n      fillColor = 'red'\n    }\n  }\n\n  node.status({fill: fillColor, shape: 'dot', text: informationText})\n}\n\nconst analyzeWriteResults = function (node: Node, msg: TodoTypeAny) {\n  let entryStatus = handlePayloadArrayOfStatusCodes(msg)\n  setNodeStatusInfo(node, msg, entryStatus)\n}\n\nconst isStatusInput = (status: any): status is StatusInput | StatusInput[] => {\n  if (\"statusCode\" in status && typeof status.statusCode?.name === \"string\") {\n    return true;\n  }\n  if (Array.isArray(status)) {\n    return status.every((item: any) => typeof item.statusCode?.name === \"string\");\n  }\n  return false;\n}\n\nconst handlePayloadStatusCode = <T extends Record<any, any>>(node: Node, statusInputs: unknown, payload: AnyPayload) => {\n  if (!isStatusInput(statusInputs)) {\n    if (isArray(statusInputs)) {\n      if (statusInputs.length !== 0)\n        payload.entryStatus = {\n          good: statusInputs.length,\n          bad: 0,\n          other: 0,\n        }\n      else\n        payload.entryStatus = {\n          good: 0,\n          bad: 1,\n          other: 0,\n        }\n    } else {\n      if (statusInputs instanceof Error) {\n        payload.entryStatus = {\n          bad: 1,\n          other: 0,\n          good: 0,\n        }\n      } else {\n        payload.entryStatus = {\n          bad: 0,\n          other: 0,\n          good: 1,\n        }\n      }\n    }\n    return;\n  }\n\n  let entryStatus = {\n    bad: 0,\n    good: 0,\n    other: 0\n  }\n\n  if (!statusInputs || (statusInputs as StatusInput[]).length === 0) {\n    payload.entryStatus = {\n      ...entryStatus,\n      bad: 1\n    }\n    return;\n  }\n\n  if (isArray(statusInputs)) {\n    entryStatus = handlePayloadArrayOfObjects(statusInputs)\n  } else {\n    entryStatus = handlePayloadObject(statusInputs)\n  }\n  setNodeStatusInfo(node, payload, entryStatus)\n  payload.entryStatus = entryStatus\n}\n\nconst setNodeStatusInfo = function (node: Node, payload: ResponseInputPayload, entryStatus: TodoTypeAny) {\n  payload.entryStatus = entryStatus\n  payload.entryStatusText = 'Good:' + entryStatus['good'] + ' Bad:' + entryStatus['bad'] + ' Other:' + entryStatus['other']\n  setNodeStatus(node, payload.entryStatus, payload.entryStatusText)\n}\n\nconst handlePayloadArrayOfObjects = function (statusInputs: StatusInput[]) {\n  let entryStatus = {\n    bad: 0,\n    good: 0,\n    other: 0\n  }\n\n  statusInputs.forEach((entry: any) => {\n      switch (entry.statusCode?.name) {\n        case 'Good':\n          entryStatus['good'] += 1\n          break\n        case 'Bad':\n          entryStatus['bad'] += 1\n          break\n        default:\n          if (entry.statusCode?.name?.includes('Bad') || entry.toString().includes('Error')) {\n            entryStatus['bad'] += 1\n          } else {\n            entryStatus['good'] += 1\n          }\n      }\n    }\n  )\n  return entryStatus\n}\n\nconst handlePayloadObject = function (statusInput: StatusInput) {\n  let entryStatus = {\n    good: 0,\n    bad: 0,\n    other: 0,\n  }\n\n  if (isArray(statusInput)) {\n    entryStatus = handlePayloadArrayOfObjects(statusInput as StatusInput[])\n  }\n\n  if (statusInput && statusInput.statusCode) {\n    if (statusInput.statusCode.name) {\n      switch (statusInput.statusCode.name) {\n        case 'Good':\n          entryStatus['good'] += 1\n          break\n        case 'Bad':\n          entryStatus['bad'] += 1\n          break\n        default:\n          if (statusInput.statusCode.name.includes('Good')) {\n            entryStatus['good'] += 1\n          } else if (statusInput.statusCode.name.includes('Bad')) {\n            entryStatus['bad'] += 1\n          } else {\n            entryStatus['other'] += 1\n          }\n      }\n    } else {\n      entryStatus['other'] += 1\n    }\n  } else {\n    entryStatus['other'] += 1\n  }\n\n  return entryStatus\n}\n\nconst handlePayloadArrayOfStatusCodes = function (payload: ResponseInputPayload) {\n  let entry = null\n  let entryStatus = {\n    good: 0,\n    bad: 0,\n    other: 0,\n  }\n\n  if (!payload.statusCodes){\n    payload.statusCodes = payload.value?.statusCodes\n  }\n\n  if (payload.statusCodes) {\n    for (entry of payload.statusCodes) {\n      if (entry && entry.name) {\n        switch (entry.name) {\n          case 'Good':\n            entryStatus['good'] += 1\n            break\n          case 'Bad':\n            entryStatus['bad'] += 1\n            break\n          default:\n            if (entry.name.includes('Good')) {\n              entryStatus['good'] += 1\n            } else if (entry.name.includes('Bad')) {\n              entryStatus['bad'] += 1\n            } else {\n              entryStatus['other'] += 1\n            }\n        }\n      } else {\n        entryStatus['other'] += 1\n      }\n    }\n  } else {\n    entryStatus['other'] += 1\n  }\n\n  return entryStatus\n}\n\nconst defaultCompress = function (payload: any) {\n  if (payload.value.value) {\n    payload.value = payload.value.value\n  }\n  trimMessageExtensions(payload)\n}\n\nconst trimMessageExtensions = function (payload: any) {\n  delete payload['nodesToRead']\n  delete payload['nodesToReadCount']\n  delete payload['addressItemsToRead']\n  delete payload['addressItemsToReadCount']\n  delete payload['addressItemsToBrowse']\n  delete payload['addressItemsToBrowseCount']\n  delete payload['addressSpaceItems']\n  delete payload['injectType']\n  delete payload['entryStatusText']\n\n  if (payload.filter) {\n    compressFilteredMessage(payload)\n  }\n}\n\nconst trimMessagePayloadExtensions = (payload: any) => {\n  delete payload['listenerParameters']\n}\n\nexport type CompressedBrowseResult = {\n  nodeId: string\n  browseName: string\n  displayName: string\n}\n\nconst compressBrowseMessageStructure = function (payload: BrowserPayload) {\n  if (payload.browserResults?.length) {\n    payload.value = payload.browserResults.map((item: TodoTypeAny) => {\n      return {\n        nodeId: item.nodeId.toString(),\n        browseName: (item.browseName?.namespaceIndex) ? item.browseName?.namespaceIndex + ':' + item.browseName?.name : item.browseName,\n        displayName: item.displayName?.text\n      }\n    })\n    trimMessageExtensions(payload)\n    trimMessagePayloadExtensions(payload)\n  } else {\n    defaultCompress(payload as AnyPayload)\n  }\n}\n\nconst compressCrawlerMessageStructure = function (payload: CrawlerPayload) {\n  if (payload.hasOwnProperty('crawlerResults') && payload.crawlerResults?.length) {\n    payload.value = payload.crawlerResults?.map((item: TodoTypeAny) => {\n      return {\n        nodeId: item.nodeId.toString(),\n        browseName: (item.browseName.namespaceIndex) ? item.browseName.namespaceIndex + ':' + item.browseName.name : item.browseName,\n        displayName: item.displayName.text\n      }\n    })\n    trimMessageExtensions(payload)\n    trimMessagePayloadExtensions(payload)\n  } else {\n    defaultCompress(payload)\n  }\n}\n\nconst reconsturctNodeIdOnRead = function (payload: ResponseInputPayload) {\n  let results = payload.value || payload\n  let nodesToRead = payload.nodesToRead\n\n  if (results && results.length) {\n    payload.value = results.map((item: TodoTypeAny, index: number) => {\n      if (item?.value?.value) {\n        let nodeId = null\n        if (nodesToRead && index < nodesToRead.length) {\n          nodeId = nodesToRead[index]\n        } else {\n          if (payload.addressSpaceItems && index < payload.addressSpaceItems.length) {\n            nodeId = payload.addressSpaceItems[index]\n          }\n        }\n        return {\n          value: item.value?.value,\n          dataType: item.value?.dataType,\n          nodeId\n        }\n      } else {\n        return item\n      }\n    })\n  }\n}\n\nconst compressVariableValueMessage = function (payload: any) {\n  delete payload['nodesToRead']\n  delete payload['nodesToReadCount']\n  delete payload['addressSpaceItems']\n\n  return payload\n}\n\nconst compressFilteredMessage = function (payload: any) {\n  delete payload['filter']\n  delete payload['filtertype']\n}\n\nconst compressReadMessageStructure = function (payload: any) {\n  switch (payload.readtype) {\n    case 'AllAttributes':\n      delete payload['nodesToRead']\n      delete payload['resultsConverted']\n      break\n    case 'VariableValue':\n      payload = compressVariableValueMessage(payload)\n      break\n    default:\n      break\n  }\n\n  delete payload['readtype']\n  delete payload['attributeId']\n\n  delete payload['addressItemsToReadn']\n  delete payload['addressItemsToReadCount']\n\n  trimMessageExtensions(payload)\n}\n\nconst compressWriteMessageStructure = function (payload: any) {\n  defaultCompress(payload)\n\n  let itemList: TodoTypeAny[] = []\n  payload.value = payload.statusCodes.map((item: TodoTypeAny, index: number) => {\n    return {\n      nodeId: (payload.nodesToWrite) ? payload.nodesToWrite[index] : payload.addressSpaceItems[index],\n      statusCode: item,\n      value: (payload.valuesToWrite) ? payload.valuesToWrite[index] : null\n    }\n  })\n\n  delete payload['valuesToWrite']\n}\n\nconst compressListenMessageStructure = function (payload: ResponseInputPayload | any) {\n  // interpreting payload as any makes reassigning it not cause errors\n  if (payload.hasOwnProperty('value') && payload.value.hasOwnProperty('value')) {\n    payload = {\n      value: payload.value.value,\n      dataType: payload.value.dataType,\n      nodeId: (payload.addressSpaceItems[0].nodeId) ? payload.addressSpaceItems[0].nodeId : payload.addressSpaceItems[0]\n    }\n  }\n  trimMessageExtensions(payload)\n}\n\nconst compressMethodMessageStructure = function (payload: any) {\n  defaultCompress(payload)\n  trimMessageExtensions(payload)\n\n  delete payload['inputArguments']\n  delete payload['objectId']\n  delete payload['methodId']\n  delete payload['methodType']\n\n  delete payload['definition']\n}\n\nconst compressDefaultMessageStructure = function (payload: ResponseInputPayload) {\n  defaultCompress(payload)\n  trimMessageExtensions(payload)\n}\n\n\nconst coreResponse = {\n  internalDebugLog,\n  detailDebugLog,\n  EMPTY_LIST,\n  NONE,\n\n  analyzeBrowserResults,\n  analyzeCrawlerResults,\n  analyzeReadResults,\n  analyzeListenerResults,\n  analyzeMethodResults,\n  setNodeStatus,\n  analyzeWriteResults,\n  handlePayloadStatusCode,\n  setNodeStatusInfo,\n  handlePayloadArrayOfObjects,\n  handlePayloadObject,\n  handlePayloadArrayOfStatusCodes,\n  defaultCompress,\n  trimMessageExtensions,\n  trimMessagePayloadExtensions,\n  compressBrowseMessageStructure,\n  compressCrawlerMessageStructure,\n  reconsturctNodeIdOnRead,\n  compressVariableValueMessage,\n  compressFilteredMessage,\n  compressReadMessageStructure,\n  compressWriteMessageStructure,\n  compressListenMessageStructure,\n  compressMethodMessageStructure,\n  compressDefaultMessageStructure,\n}\n\nexport default coreResponse\n"]}