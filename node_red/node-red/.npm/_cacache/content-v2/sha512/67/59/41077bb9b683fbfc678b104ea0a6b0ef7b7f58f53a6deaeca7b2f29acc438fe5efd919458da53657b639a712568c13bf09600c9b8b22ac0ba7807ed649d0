{"_id":"callbackify","_rev":"20-1f314f47536927b1813da2ae5b2610a2","name":"callbackify","description":"backwards compatibilify your callback functions while migrating apis to promises","dist-tags":{"latest":"1.1.0"},"versions":{"0.1.0":{"name":"callbackify","author":{"name":"jden","email":"jason@denizac.org"},"version":"0.1.0","description":"backwards compatibilify your callback functions while migrating apis to promises","keywords":["promises","promisesaplus"],"main":"index.js","scripts":{"test":"node node_modules/mocha/bin/mocha"},"repository":{"type":"git","url":"git@github.com:jden/callbackify.git"},"license":"MIT","devDependencies":{"chai":"~1.6.0","mocha":"~1.9.0","q":"~0.9.6"},"bugs":{"url":"https://github.com/jden/callbackify/issues"},"_id":"callbackify@0.1.0","dist":{"shasum":"cd2832a1ad4138fdf1b21eb3208c69ba02085d66","tarball":"https://registry.npmjs.org/callbackify/-/callbackify-0.1.0.tgz","integrity":"sha512-S9sbJz5lNR/d1sbi8mpd8uOuVqvv9tyZPsoqkdd+/M2yYvpY2sSBbICu3mEXKOFeh3PQ2TPaWDzRsbonW8BI7g==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDGea6L877mUAigqSHu/5AYiWRSRfFlFtiiqgUALbtBUAIhAMNOkKXzb5SQ5cRbsCQJdoo8VkEhMXzytQN2sYteq4JA"}]},"_from":".","_npmVersion":"1.3.5","_npmUser":{"name":"jden","email":"jason@denizac.org"},"maintainers":[{"name":"jden","email":"jason@denizac.org"}],"directories":{}},"0.1.1":{"name":"callbackify","author":{"name":"jden","email":"jason@denizac.org"},"version":"0.1.1","description":"backwards compatibilify your callback functions while migrating apis to promises","keywords":["promises","promisesaplus"],"main":"index.js","scripts":{"test":"node node_modules/mocha/bin/mocha"},"repository":{"type":"git","url":"git@github.com:jden/callbackify.git"},"license":"MIT","devDependencies":{"chai":"~1.6.0","mocha":"~1.9.0","bluebird":"~0.11.5-0"},"bugs":{"url":"https://github.com/jden/callbackify/issues"},"homepage":"https://github.com/jden/callbackify","_id":"callbackify@0.1.1","dist":{"shasum":"3b1cdd6c4b326d75006bd8ad5a93a7a214117cda","tarball":"https://registry.npmjs.org/callbackify/-/callbackify-0.1.1.tgz","integrity":"sha512-rPdx7cpTfxqCmbmnKy3td2UPDcPHMdoVvgpnRQLi8DubxaOcSHNj3LNkfjcWNJWOQOZ8h2s2tF7o1ZpTT5gKDQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCz3522YUY8TdQei5Mc58hEAosNnSSUSTzC8hfy1PRIIAIhAKdUIqQK+che8Jw73H+NZbF0V101PK1hhiBvu7Gb5KwJ"}]},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"jden","email":"jason@denizac.org"},"maintainers":[{"name":"jden","email":"jason@denizac.org"}],"directories":{}},"0.1.2":{"name":"callbackify","author":{"name":"jden","email":"jason@denizac.org"},"version":"0.1.2","description":"backwards compatibilify your callback functions while migrating apis to promises","keywords":["promises","promisesaplus"],"main":"index.js","scripts":{"test":"node node_modules/mocha/bin/mocha"},"repository":{"type":"git","url":"git@github.com:jden/callbackify.git"},"license":"MIT","devDependencies":{"chai":"~1.6.0","mocha":"~1.9.0","bluebird":"~0.11.5-0"},"bugs":{"url":"https://github.com/jden/callbackify/issues"},"homepage":"https://github.com/jden/callbackify","_id":"callbackify@0.1.2","dist":{"shasum":"2e7cdaba793237af6f0d184891c67b4ef689c6cc","tarball":"https://registry.npmjs.org/callbackify/-/callbackify-0.1.2.tgz","integrity":"sha512-B25569tAjF4zgjhYuiDr1sWRbbWxOJlMasDfoWgtCzHmpdobD2KNN3Q+g2EtxHQA7IBAwR7S0LBSYTQ7PqdUUA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAaou6AzW+SVB7pfu5C4Nm8SJSQjyiouYcEzTW94jrFBAiAOag/aZlW7OtqhN7Mhzi8Py/DSqr+Wpf48c/QtoK7k2A=="}]},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"jden","email":"jason@denizac.org"},"maintainers":[{"name":"jden","email":"jason@denizac.org"}],"directories":{}},"1.0.0":{"name":"callbackify","author":{"name":"jden","email":"jason@denizac.org"},"version":"1.0.0","description":"backwards compatibilify your callback functions while migrating apis to promises","keywords":["promises","promisesaplus"],"main":"index.js","scripts":{"test":"node node_modules/mocha/bin/mocha"},"repository":{"type":"git","url":"git@github.com:jden/callbackify.git"},"license":"MIT","devDependencies":{"chai":"^1.9.1","mocha":"^1.20.1","bluebird":"^2.2.1"},"bugs":{"url":"https://github.com/jden/callbackify/issues"},"homepage":"https://github.com/jden/callbackify","_id":"callbackify@1.0.0","dist":{"shasum":"424b3eedc7ce89de485ae7754aa8aa6593c6a23c","tarball":"https://registry.npmjs.org/callbackify/-/callbackify-1.0.0.tgz","integrity":"sha512-hCa9JBOcue4wD/8Kog1CVyoDK7MZqXv6JcQVyXLIW8pshL7Vg+x+fFHasDn9PO/1RGSh8g2GhCYYTvmtlULNgQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCEA7sc0Ayswpe3YrCYCB/0degLtPm6BPr6mpLXE92rbAIgYbKjH5SldmqNyx9wlGq0ohalEuz/6lMUctti1Gy6L5w="}]},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"jden","email":"jason@denizac.org"},"maintainers":[{"name":"jden","email":"jason@denizac.org"}],"directories":{}},"1.1.0":{"name":"callbackify","author":{"name":"jden","email":"jason@denizac.org"},"version":"1.1.0","description":"backwards compatibilify your callback functions while migrating apis to promises","keywords":["promises","promisesaplus"],"main":"index.js","scripts":{"test":"node node_modules/mocha/bin/mocha"},"repository":{"type":"git","url":"git@github.com:jden/callbackify.git"},"license":"MIT","devDependencies":{"chai":"^1.9.1","mocha":"^1.20.1","bluebird":"^2.2.1"},"gitHead":"f36d4ed6e905dc400746c17c4b02ad5c23e6bf71","bugs":{"url":"https://github.com/jden/callbackify/issues"},"homepage":"https://github.com/jden/callbackify","_id":"callbackify@1.1.0","_shasum":"d2a36986d28aa69714526c111209beeb9979d31e","_from":".","_npmVersion":"2.5.0","_nodeVersion":"0.10.36","_npmUser":{"name":"jden","email":"jason@denizac.org"},"maintainers":[{"name":"jden","email":"jason@denizac.org"}],"dist":{"shasum":"d2a36986d28aa69714526c111209beeb9979d31e","tarball":"https://registry.npmjs.org/callbackify/-/callbackify-1.1.0.tgz","integrity":"sha512-dypYUxqOLco4orSE0+0DcMkdBNHGT11/bNdQkLVtq3sWdShwtgdet18BgAoBHPZpDK2WfisIWJpYAFV321+Jtw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC6KflWiGYje4n9uFyyWalH4kL50JTHuDCLx1ywjvNuJwIhAKGDqpK5LZ8Lxna/TWDZd3+jPHWvxe5txVogENEjYbuL"}]},"directories":{}}},"readme":"# callbackify\nbackwards compatibilify your callback functions while migrating apis to promises\n\n## usage\n```js\nvar callbackify = require('callbackify')\n\nvar getUserById = callbackify(function (id) {\n  // in this example, we're using [minq](https://npm.im/minq)\n  return db.users.byId(id).first()\n})\n\n// later in your code, we can use a callback\n\ngetUserById(23, function (err, user) {\n  if (err) { /* give up */ return }\n  console.log('hello, ', user.name)\n})\n\n// but for newer code, we can consume it as a promise\n\ngetUserById(23).then(function (user) {\n  console.log('hello, ', user.name)\n}, function (err) {\n  console.error(err)\n})\n\n```\n`callbackify` will also preserve the `this` context of your functions:\n```js\ngetUserById.call({foo:true}, 12)\n// the underlying promise-returning function is called with the supplied context argument\n```\n\nNormally, callbackify will only work with fixed-parameter-length functions, and will use the declared\nparameter length to determine if the extra callback argument is present.  If you need to use\ncallbackify with variadic functions, or functions that don't declare their full argument\nlist, you can use:\n```js\n// options argument is optional\nvar getUserById = callbackify.variadic(function (id, options) {\n  if (options === undefined) { options = {} }\n  if (options.select) {\n    return db.users.byId(id).select(options.select).first()\n  } else {\n    return db.users.byId(id).first()\n  }\n})\n\n// we can do either of these\ngetUserById(23, function (err, user) { })\ngetUserById(23, { select: [ 'name' ] }, function (err, user) {} )\n```\nNote that this will not work if the last argument your function can take\nis a function, as that last argument will always be detected as a callback\nfunction.\n\n## api\n\n### `callbackify : (fn: (...args) => Promise<T> ) => (...args, Callback<T>) => Promise<T>`\n\nTakes a Promise-returning function `fn` and returns a new function which can return a Promise or take a callback as the last parameter. If a callback is supplied, the function returns void. If no callback is supplied, the promise is returned.\n\n## installation\n\n    $ npm install callbackify\n\n\n## running the tests\n\nFrom package root:\n\n    $ npm install\n    $ npm test\n\n\n## contributors\n\n- jden <jason@denizac.org>\n- tootallnate <nathan@tootallnate.net>\n\n\n## license\n\nMIT. (c) MMXIII jden <jason@denizac.org>. See LICENSE.md\n","maintainers":[],"time":{"modified":"2022-06-13T05:26:19.946Z","created":"2013-08-14T19:26:26.042Z","0.1.0":"2013-08-14T19:26:27.273Z","0.1.1":"2013-12-10T21:01:25.704Z","0.1.2":"2014-04-28T21:05:48.340Z","1.0.0":"2014-07-13T18:54:25.916Z","1.1.0":"2015-03-10T21:29:24.202Z"},"author":{"name":"jden","email":"jason@denizac.org"},"repository":{"type":"git","url":"git@github.com:jden/callbackify.git"},"homepage":"https://github.com/jden/callbackify","keywords":["promises","promisesaplus"],"bugs":{"url":"https://github.com/jden/callbackify/issues"},"license":"MIT","readmeFilename":"README.md","users":{"guumaster":true,"allain":true,"andrewconnell":true,"shakakira":true}}